<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0204.1543                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='uboat-data+ (uboat-data)' inline='true' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Kaden\Documents\GitHub\uboat-data\data\uboat-data.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[uboat-attacks].[ship_id]' />
              <expression op='[uboat-targets].[ship_id]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[uboat-data].[id]' />
                <expression op='[uboat-attacks].[uboat_id]' />
              </expression>
            </clause>
            <relation name='uboat-data' table='[&apos;uboat-data$&apos;]' type='table'>
              <columns gridOrigin='A1:O1154:no:A1:O1154:0' header='yes' outcome='6'>
                <column datatype='integer' name='id' ordinal='0' />
                <column datatype='string' name='name' ordinal='1' />
                <column datatype='string' name='type' ordinal='2' />
                <column datatype='date' name='ordered' ordinal='3' />
                <column datatype='date' name='laid_down' ordinal='4' />
                <column datatype='date' name='commissioned' ordinal='5' />
                <column datatype='date' name='launched' ordinal='6' />
                <column datatype='date' name='fate' ordinal='7' />
                <column datatype='string' name='fate_type' ordinal='8' />
                <column datatype='integer' name='fate_survivors' ordinal='9' />
                <column datatype='real' name='fate_lat' ordinal='10' />
                <column datatype='real' name='fat_lon' ordinal='11' />
                <column datatype='integer' name='fate_dead' ordinal='12' />
                <column datatype='string' name='shipyard' ordinal='13' />
                <column datatype='integer' name='ships_sunk' ordinal='14' />
              </columns>
            </relation>
            <relation name='uboat-attacks' table='[&apos;uboat-attacks$&apos;]' type='table'>
              <columns gridOrigin='A1:F3470:no:A1:F3470:0' header='yes' outcome='6'>
                <column datatype='integer' name='ship_id' ordinal='0' />
                <column datatype='date' name='attack_date' ordinal='1' />
                <column datatype='string' name='loss_type' ordinal='2' />
                <column datatype='string' name='uboat_name' ordinal='3' />
                <column datatype='integer' name='uboat_id' ordinal='4' />
                <column datatype='string' name='uboat_commander' ordinal='5' />
              </columns>
            </relation>
          </relation>
          <relation name='uboat-targets' table='[&apos;uboat-targets$&apos;]' type='table'>
            <columns gridOrigin='A1:L3332:no:A1:L3332:0' header='yes' outcome='2'>
              <column datatype='integer' name='ship_id' ordinal='0' />
              <column datatype='string' name='ship_name' ordinal='1' />
              <column datatype='string' name='nationality' ordinal='2' />
              <column datatype='integer' name='tonnage' ordinal='3' />
              <column datatype='integer' name='complement' ordinal='4' />
              <column datatype='integer' name='survivors' ordinal='5' />
              <column datatype='integer' name='dead' ordinal='6' />
              <column datatype='string' name='attack_time' ordinal='7' />
              <column datatype='date' name='attack_date' ordinal='8' />
              <column datatype='real' name='attack_lat' ordinal='9' />
              <column datatype='real' name='attack_lon' ordinal='10' />
              <column datatype='integer' name='completed' ordinal='11' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[attack_date (uboat-targets)]' value='[uboat-targets].[attack_date]' />
          <map key='[attack_date]' value='[uboat-attacks].[attack_date]' />
          <map key='[attack_lat]' value='[uboat-targets].[attack_lat]' />
          <map key='[attack_lon]' value='[uboat-targets].[attack_lon]' />
          <map key='[attack_time]' value='[uboat-targets].[attack_time]' />
          <map key='[commissioned]' value='[uboat-data].[commissioned]' />
          <map key='[complement]' value='[uboat-targets].[complement]' />
          <map key='[completed]' value='[uboat-targets].[completed]' />
          <map key='[dead]' value='[uboat-targets].[dead]' />
          <map key='[fat_lon]' value='[uboat-data].[fat_lon]' />
          <map key='[fate]' value='[uboat-data].[fate]' />
          <map key='[fate_dead]' value='[uboat-data].[fate_dead]' />
          <map key='[fate_lat]' value='[uboat-data].[fate_lat]' />
          <map key='[fate_survivors]' value='[uboat-data].[fate_survivors]' />
          <map key='[fate_type]' value='[uboat-data].[fate_type]' />
          <map key='[id]' value='[uboat-data].[id]' />
          <map key='[laid_down]' value='[uboat-data].[laid_down]' />
          <map key='[launched]' value='[uboat-data].[launched]' />
          <map key='[loss_type]' value='[uboat-attacks].[loss_type]' />
          <map key='[name]' value='[uboat-data].[name]' />
          <map key='[nationality]' value='[uboat-targets].[nationality]' />
          <map key='[ordered]' value='[uboat-data].[ordered]' />
          <map key='[ship_id (uboat-targets)]' value='[uboat-targets].[ship_id]' />
          <map key='[ship_id]' value='[uboat-attacks].[ship_id]' />
          <map key='[ship_name]' value='[uboat-targets].[ship_name]' />
          <map key='[ships_sunk]' value='[uboat-data].[ships_sunk]' />
          <map key='[shipyard]' value='[uboat-data].[shipyard]' />
          <map key='[survivors]' value='[uboat-targets].[survivors]' />
          <map key='[tonnage (uboat-targets)]' value='[uboat-targets].[tonnage]' />
          <map key='[type]' value='[uboat-data].[type]' />
          <map key='[uboat_commander]' value='[uboat-attacks].[uboat_commander]' />
          <map key='[uboat_id]' value='[uboat-attacks].[uboat_id]' />
          <map key='[uboat_name]' value='[uboat-attacks].[uboat_name]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ordered</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ordered]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>ordered</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>laid_down</remote-name>
            <remote-type>7</remote-type>
            <local-name>[laid_down]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>laid_down</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commissioned</remote-name>
            <remote-type>7</remote-type>
            <local-name>[commissioned]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>commissioned</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>launched</remote-name>
            <remote-type>7</remote-type>
            <local-name>[launched]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>launched</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[fate]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fate_type]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_survivors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fate_survivors]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_survivors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fate_lat]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_lat</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fat_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fat_lon]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fat_lon</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_dead</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fate_dead]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_dead</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipyard</remote-name>
            <remote-type>130</remote-type>
            <local-name>[shipyard]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>shipyard</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ships_sunk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ships_sunk]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>ships_sunk</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O1154:no:A1:O1154:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ship_id]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>ship_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[attack_date]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>attack_date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loss_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[loss_type]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>loss_type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uboat_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[uboat_name]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>uboat_name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uboat_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[uboat_id]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>uboat_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uboat_commander</remote-name>
            <remote-type>130</remote-type>
            <local-name>[uboat_commander]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>uboat_commander</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F3470:no:A1:F3470:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ship_id (uboat-targets)]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>ship_id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ship_name]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>ship_name</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nationality]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>nationality</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tonnage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tonnage (uboat-targets)]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>tonnage</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[complement]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>complement</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survivors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[survivors]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>survivors</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dead</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dead]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>dead</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attack_time]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_time</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[attack_date (uboat-targets)]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attack_lat]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_lat</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attack_lon]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_lon</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>completed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[completed]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>completed</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L3332:no:A1:L3332:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ships Sunk / Month' datatype='real' name='[Calculation_1035264973625937920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([ship_name])/COUNTD(MONTH([attack_date]))' />
      </column>
      <column caption='Survival Rate' datatype='real' name='[Calculation_704250407341625344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[fate_survivors]/([fate_survivors]+[fate_dead])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Attack Date (Uboat-Targets)' datatype='date' name='[attack_date (uboat-targets)]' role='dimension' type='ordinal' />
      <column caption='Attack Date' datatype='date' name='[attack_date]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[attack_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[attack_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Commissioned' datatype='date' name='[commissioned]' role='dimension' type='ordinal' />
      <column caption='Complement' datatype='integer' name='[complement]' role='dimension' type='ordinal' />
      <column caption='Dead' datatype='integer' name='[dead]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[fat_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Fate' datatype='date' name='[fate]' role='dimension' type='ordinal' />
      <column caption='Fate Dead' datatype='integer' name='[fate_dead]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[fate_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Fate Survivors' datatype='integer' name='[fate_survivors]' role='measure' type='quantitative' />
      <column caption='Fate Type' datatype='string' name='[fate_type]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Laid Down' datatype='date' name='[laid_down]' role='dimension' type='ordinal' />
      <column caption='Launched' datatype='date' name='[launched]' role='dimension' type='ordinal' />
      <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
      <column caption='Ordered' datatype='date' name='[ordered]' role='dimension' type='ordinal' />
      <column caption='Ship Id (Uboat-Targets)' datatype='integer' name='[ship_id (uboat-targets)]' role='dimension' type='ordinal' />
      <column caption='Ship Id' datatype='integer' name='[ship_id]' role='dimension' type='ordinal' />
      <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
      <column caption='Ships Sunk' datatype='integer' name='[ships_sunk]' role='measure' type='quantitative' />
      <column caption='Shipyard' datatype='string' name='[shipyard]' role='dimension' type='nominal' />
      <column caption='Survivors' datatype='integer' name='[survivors]' role='dimension' type='ordinal' />
      <column caption='Tonnage (Uboat-Targets)' datatype='integer' name='[tonnage (uboat-targets)]' role='measure' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
      <column caption='Uboat Id' datatype='integer' name='[uboat_id]' role='dimension' type='ordinal' />
      <column caption='Uboat Name' datatype='string' name='[uboat_name]' role='dimension' type='nominal' />
      <column-instance column='[fate_type]' derivation='None' name='[none:fate_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[fate]' derivation='Month-Trunc' name='[tmn:fate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fate]' derivation='Year' name='[yr:fate:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.71197' measure-ordering='alphabetic' measure-percentage='0.28803' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:fate:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1939</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1940</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1941</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1942</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1943</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1944</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1945</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:nationality:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Argentinian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Australian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Belgian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chilean&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Danish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dutch&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Egyptian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Estonian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Faroese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Finnish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Greenlandic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Honduran&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Icelandic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Latvian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Lebanese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Lithuanian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nicaraguan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Norwegian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Palestinian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Panamanian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Polish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Portuguese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Romanian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;South African&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Soviet&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Swedish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Syrian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Uruguayan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Venezuelan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Yugoslavian&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:loss_type:nk]' type='shape'>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sunk&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Total Loss&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Damaged&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Captured&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:loss_type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Sunk&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Total Loss&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Captured&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Damaged&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:fate_type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Sunk&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Damaged&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Decommissioned&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Given&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Missing&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Grounded&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Scuttled&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Surrendered&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Captured&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Destroyed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tmn:fate:qk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1939</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1940</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1941</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1942</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1943</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1944</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1945</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;IXD/42&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;VIIC&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;XIV&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;IX&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;XB&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;VIIC/41&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;IXC/40&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;VIIA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;VIIF&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;IXC&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;XVIIA&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;IXD1&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IID&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;IIC&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IIA&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;IIB&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;XXIII&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;VIID&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;VIIB&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;XVIIB&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;IXD2&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;IXB&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;XXI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='id' />
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='ordered' />
        <field-sort-custom-order field='laid_down' />
        <field-sort-custom-order field='commissioned' />
        <field-sort-custom-order field='launched' />
        <field-sort-custom-order field='fate' />
        <field-sort-custom-order field='fate_type' />
        <field-sort-custom-order field='fate_survivors' />
        <field-sort-custom-order field='fate_lat' />
        <field-sort-custom-order field='fat_lon' />
        <field-sort-custom-order field='fate_dead' />
        <field-sort-custom-order field='shipyard' />
        <field-sort-custom-order field='ships_sunk' />
        <field-sort-custom-order field='id (uboat-target-data)' />
        <field-sort-custom-order field='name (uboat-target-data)' />
        <field-sort-custom-order field='loss_type' />
        <field-sort-custom-order field='attack_time' />
        <field-sort-custom-order field='attack_date' />
        <field-sort-custom-order field='attack_lat' />
        <field-sort-custom-order field='attack_lo' />
        <field-sort-custom-order field='nationality' />
        <field-sort-custom-order field='tonnage' />
        <field-sort-custom-order field='complement' />
        <field-sort-custom-order field='survivors' />
        <field-sort-custom-order field='dead' />
        <field-sort-custom-order field='commander' />
        <field-sort-custom-order field='ship_name' />
        <field-sort-custom-order field='Calculation_1035264973625937920' />
      </field-sort-info>
    </datasource>
    <datasource caption='uboat-data+ (uboat-data) (2)' inline='true' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Kaden\Documents\GitHub\uboat-data\data\uboat-data.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[uboat-attacks].[ship_id]' />
              <expression op='[uboat-targets].[ship_id]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[uboat-data].[id]' />
                <expression op='[uboat-attacks].[uboat_id]' />
              </expression>
            </clause>
            <relation name='uboat-data' table='[&apos;uboat-data$&apos;]' type='table'>
              <columns gridOrigin='A1:O1154:no:A1:O1154:0' header='yes' outcome='6'>
                <column datatype='integer' name='id' ordinal='0' />
                <column datatype='string' name='name' ordinal='1' />
                <column datatype='string' name='type' ordinal='2' />
                <column datatype='date' name='ordered' ordinal='3' />
                <column datatype='date' name='laid_down' ordinal='4' />
                <column datatype='date' name='commissioned' ordinal='5' />
                <column datatype='date' name='launched' ordinal='6' />
                <column datatype='date' name='fate' ordinal='7' />
                <column datatype='string' name='fate_type' ordinal='8' />
                <column datatype='integer' name='fate_survivors' ordinal='9' />
                <column datatype='real' name='fate_lat' ordinal='10' />
                <column datatype='real' name='fat_lon' ordinal='11' />
                <column datatype='integer' name='fate_dead' ordinal='12' />
                <column datatype='string' name='shipyard' ordinal='13' />
                <column datatype='integer' name='ships_sunk' ordinal='14' />
              </columns>
            </relation>
            <relation name='uboat-attacks' table='[&apos;uboat-attacks$&apos;]' type='table'>
              <columns gridOrigin='A1:F3470:no:A1:F3470:0' header='yes' outcome='6'>
                <column datatype='integer' name='ship_id' ordinal='0' />
                <column datatype='date' name='attack_date' ordinal='1' />
                <column datatype='string' name='loss_type' ordinal='2' />
                <column datatype='string' name='uboat_name' ordinal='3' />
                <column datatype='integer' name='uboat_id' ordinal='4' />
                <column datatype='string' name='uboat_commander' ordinal='5' />
              </columns>
            </relation>
          </relation>
          <relation name='uboat-targets' table='[&apos;uboat-targets$&apos;]' type='table'>
            <columns gridOrigin='A1:L3332:no:A1:L3332:0' header='yes' outcome='2'>
              <column datatype='integer' name='ship_id' ordinal='0' />
              <column datatype='string' name='ship_name' ordinal='1' />
              <column datatype='string' name='nationality' ordinal='2' />
              <column datatype='integer' name='tonnage' ordinal='3' />
              <column datatype='integer' name='complement' ordinal='4' />
              <column datatype='integer' name='survivors' ordinal='5' />
              <column datatype='integer' name='dead' ordinal='6' />
              <column datatype='string' name='attack_time' ordinal='7' />
              <column datatype='date' name='attack_date' ordinal='8' />
              <column datatype='real' name='attack_lat' ordinal='9' />
              <column datatype='real' name='attack_lon' ordinal='10' />
              <column datatype='integer' name='completed' ordinal='11' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[attack_date (uboat-targets)]' value='[uboat-targets].[attack_date]' />
          <map key='[attack_date]' value='[uboat-attacks].[attack_date]' />
          <map key='[attack_lat]' value='[uboat-targets].[attack_lat]' />
          <map key='[attack_lon]' value='[uboat-targets].[attack_lon]' />
          <map key='[attack_time]' value='[uboat-targets].[attack_time]' />
          <map key='[commissioned]' value='[uboat-data].[commissioned]' />
          <map key='[complement]' value='[uboat-targets].[complement]' />
          <map key='[completed]' value='[uboat-targets].[completed]' />
          <map key='[dead]' value='[uboat-targets].[dead]' />
          <map key='[fat_lon]' value='[uboat-data].[fat_lon]' />
          <map key='[fate]' value='[uboat-data].[fate]' />
          <map key='[fate_dead]' value='[uboat-data].[fate_dead]' />
          <map key='[fate_lat]' value='[uboat-data].[fate_lat]' />
          <map key='[fate_survivors]' value='[uboat-data].[fate_survivors]' />
          <map key='[fate_type]' value='[uboat-data].[fate_type]' />
          <map key='[id]' value='[uboat-data].[id]' />
          <map key='[laid_down]' value='[uboat-data].[laid_down]' />
          <map key='[launched]' value='[uboat-data].[launched]' />
          <map key='[loss_type]' value='[uboat-attacks].[loss_type]' />
          <map key='[name]' value='[uboat-data].[name]' />
          <map key='[nationality]' value='[uboat-targets].[nationality]' />
          <map key='[ordered]' value='[uboat-data].[ordered]' />
          <map key='[ship_id (uboat-targets)]' value='[uboat-targets].[ship_id]' />
          <map key='[ship_id]' value='[uboat-attacks].[ship_id]' />
          <map key='[ship_name]' value='[uboat-targets].[ship_name]' />
          <map key='[ships_sunk]' value='[uboat-data].[ships_sunk]' />
          <map key='[shipyard]' value='[uboat-data].[shipyard]' />
          <map key='[survivors]' value='[uboat-targets].[survivors]' />
          <map key='[tonnage (uboat-targets)]' value='[uboat-targets].[tonnage]' />
          <map key='[type]' value='[uboat-data].[type]' />
          <map key='[uboat_commander]' value='[uboat-attacks].[uboat_commander]' />
          <map key='[uboat_id]' value='[uboat-attacks].[uboat_id]' />
          <map key='[uboat_name]' value='[uboat-attacks].[uboat_name]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ordered</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ordered]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>ordered</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>laid_down</remote-name>
            <remote-type>7</remote-type>
            <local-name>[laid_down]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>laid_down</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commissioned</remote-name>
            <remote-type>7</remote-type>
            <local-name>[commissioned]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>commissioned</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>launched</remote-name>
            <remote-type>7</remote-type>
            <local-name>[launched]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>launched</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[fate]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fate_type]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_survivors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fate_survivors]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_survivors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fate_lat]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_lat</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fat_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fat_lon]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fat_lon</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_dead</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fate_dead]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_dead</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipyard</remote-name>
            <remote-type>130</remote-type>
            <local-name>[shipyard]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>shipyard</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ships_sunk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ships_sunk]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>ships_sunk</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O1154:no:A1:O1154:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ship_id]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>ship_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[attack_date]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>attack_date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loss_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[loss_type]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>loss_type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uboat_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[uboat_name]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>uboat_name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uboat_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[uboat_id]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>uboat_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uboat_commander</remote-name>
            <remote-type>130</remote-type>
            <local-name>[uboat_commander]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>uboat_commander</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F3470:no:A1:F3470:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ship_id (uboat-targets)]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>ship_id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ship_name]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>ship_name</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nationality]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>nationality</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tonnage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tonnage (uboat-targets)]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>tonnage</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[complement]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>complement</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survivors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[survivors]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>survivors</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dead</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dead]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>dead</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attack_time]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_time</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[attack_date (uboat-targets)]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attack_lat]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_lat</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attack_lon]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_lon</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>completed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[completed]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>completed</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L3332:no:A1:L3332:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ships Sunk / Month' datatype='real' name='[Calculation_1035264973625937920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([ship_name])/COUNTD(MONTH([attack_date]))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Attack Date (Uboat-Targets)' datatype='date' name='[attack_date (uboat-targets)]' role='dimension' type='ordinal' />
      <column caption='Attack Date' datatype='date' name='[attack_date]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[attack_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[attack_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Commissioned' datatype='date' name='[commissioned]' role='dimension' type='ordinal' />
      <column caption='Complement' datatype='integer' name='[complement]' role='dimension' type='ordinal' />
      <column caption='Dead' datatype='integer' name='[dead]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[fat_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Fate' datatype='date' name='[fate]' role='dimension' type='ordinal' />
      <column caption='Fate Dead' datatype='integer' name='[fate_dead]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[fate_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Fate Survivors' datatype='integer' name='[fate_survivors]' role='measure' type='quantitative' />
      <column caption='Fate Type' datatype='string' name='[fate_type]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Laid Down' datatype='date' name='[laid_down]' role='dimension' type='ordinal' />
      <column caption='Launched' datatype='date' name='[launched]' role='dimension' type='ordinal' />
      <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
      <column caption='Ordered' datatype='date' name='[ordered]' role='dimension' type='ordinal' />
      <column caption='Ship Id (Uboat-Targets)' datatype='integer' name='[ship_id (uboat-targets)]' role='dimension' type='ordinal' />
      <column caption='Ship Id' datatype='integer' name='[ship_id]' role='dimension' type='ordinal' />
      <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
      <column caption='Ships Sunk' datatype='integer' name='[ships_sunk]' role='measure' type='quantitative' />
      <column caption='Shipyard' datatype='string' name='[shipyard]' role='dimension' type='nominal' />
      <column caption='Survivors' datatype='integer' name='[survivors]' role='dimension' type='ordinal' />
      <column caption='Tonnage (Uboat-Targets)' datatype='integer' name='[tonnage (uboat-targets)]' role='measure' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
      <column caption='Uboat Id' datatype='integer' name='[uboat_id]' role='dimension' type='ordinal' />
      <column caption='Uboat Name' datatype='string' name='[uboat_name]' role='dimension' type='nominal' />
      <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[uboat_commander]' derivation='None' name='[none:uboat_commander:nk]' pivot='key' type='nominal' />
      <column-instance column='[fate]' derivation='Year' name='[yr:fate:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.71197' measure-ordering='alphabetic' measure-percentage='0.28803' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:fate:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1939</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1940</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1941</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1942</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1943</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1944</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1945</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:loss_type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Sunk&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Total Loss&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Captured&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Damaged&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:loss_type:nk]' type='shape'>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sunk&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Total Loss&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Damaged&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Captured&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:uboat_commander:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Robert Gysae&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Wolfgang Lüth&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Erich Topp&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Georg Lassen&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Otto Kretschmer&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Joachim Schepke&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Heinrich Liebe&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Carl Emmermann&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Reinhard Hardegen&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Victor Oehrn&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Adalbert Schnee&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Werner Hartmann&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Viktor Schütze&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Heinrich Lehmann-Willenbrock&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Heinrich Bleichrodt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Karl-Friedrich Merten&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Günther Prien&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Klaus Scholtz&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Johann Mohr&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Herbert Schultze&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ernst Bauer&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Werner Henke&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Engelbert Endrass&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Adolf Cornelius Piening&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Wilhelm Rollmann&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:nationality:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Norwegian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Argentinian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Australian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Belgian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chilean&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Danish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Egyptian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Estonian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Faroese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Finnish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Greenlandic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Honduran&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Icelandic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Latvian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Lebanese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Lithuanian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nicaraguan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Palestinian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Panamanian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Polish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Portuguese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Romanian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;South African&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Swedish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Syrian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Uruguayan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Venezuelan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Yugoslavian&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Soviet&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Dutch&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;American&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;VIIA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;VIIB&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;VIIC&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;VIIC/41&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;VIID&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;IIA&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;XXIII&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IX&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IXB&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IXC&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IXC/40&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IXD1&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;IXD2&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;XB&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;IIB&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;IIC&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;IID&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='id' />
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='ordered' />
        <field-sort-custom-order field='laid_down' />
        <field-sort-custom-order field='commissioned' />
        <field-sort-custom-order field='launched' />
        <field-sort-custom-order field='fate' />
        <field-sort-custom-order field='fate_type' />
        <field-sort-custom-order field='fate_survivors' />
        <field-sort-custom-order field='fate_lat' />
        <field-sort-custom-order field='fat_lon' />
        <field-sort-custom-order field='fate_dead' />
        <field-sort-custom-order field='shipyard' />
        <field-sort-custom-order field='ships_sunk' />
        <field-sort-custom-order field='id (uboat-target-data)' />
        <field-sort-custom-order field='name (uboat-target-data)' />
        <field-sort-custom-order field='loss_type' />
        <field-sort-custom-order field='attack_time' />
        <field-sort-custom-order field='attack_date' />
        <field-sort-custom-order field='attack_lat' />
        <field-sort-custom-order field='attack_lo' />
        <field-sort-custom-order field='nationality' />
        <field-sort-custom-order field='tonnage' />
        <field-sort-custom-order field='complement' />
        <field-sort-custom-order field='survivors' />
        <field-sort-custom-order field='dead' />
        <field-sort-custom-order field='commander' />
        <field-sort-custom-order field='ship_name' />
        <field-sort-custom-order field='Calculation_1035264973625937920' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Nationality Sunk over Time' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Nationality' />
        <param name='target' value='Nationality Sunk over Time' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Fate Accross Type' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Fate Type' />
        <param name='target' value='Fate Accross Type' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Attack Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Attack Date (Uboat-Targets)' datatype='date' name='[attack_date (uboat-targets)]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[attack_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[attack_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[ship_name]' derivation='Attribute' name='[attr:ship_name:nk]' pivot='key' type='nominal' />
            <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
            <column-instance column='[attack_lat]' derivation='None' name='[none:attack_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attack_lon]' derivation='None' name='[none:attack_lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[attack_date (uboat-targets)]' derivation='Year-Trunc' name='[tyr:attack_date (uboat-targets):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:loss_type:nk]' />
              <groupfilter function='member' level='[none:loss_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lon:qk]' field-type='quantitative' max='11700759.900999105' min='-9651363.9753294885' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lat:qk]' field-type='quantitative' max='10280355.776681323' min='-1260584.8019693915' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:attack_date (uboat-targets):qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:attack_date (uboat-targets):qk]' />
              <shape column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[attr:name:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[attr:ship_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='157' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lat:qk]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Attack Map (Commander)'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data) (2)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)'>
            <column caption='Attack Date (Uboat-Targets)' datatype='date' name='[attack_date (uboat-targets)]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[attack_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[attack_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[ship_name]' derivation='Attribute' name='[attr:ship_name:nk]' pivot='key' type='nominal' />
            <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
            <column-instance column='[attack_lat]' derivation='None' name='[none:attack_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attack_lon]' derivation='None' name='[none:attack_lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[uboat_commander]' derivation='None' name='[none:uboat_commander:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:loss_type:nk]' />
              <groupfilter function='member' level='[none:loss_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:uboat_commander:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([attack_date (uboat-targets)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:uboat_commander:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]</column>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:uboat_commander:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]' field-type='quantitative' max='27411955.751505792' min='-15292292.001151407' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]' field-type='quantitative' max='12228168.215119321' min='-10853712.942182103' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:uboat_commander:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[attr:name:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[attr:ship_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.77961325645446777' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Attack Map (Nationality)'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data) (2)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)'>
            <column caption='Attack Date (Uboat-Targets)' datatype='date' name='[attack_date (uboat-targets)]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[attack_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[attack_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[ship_name]' derivation='Attribute' name='[attr:ship_name:nk]' pivot='key' type='nominal' />
            <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
            <column-instance column='[attack_lat]' derivation='None' name='[none:attack_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attack_lon]' derivation='None' name='[none:attack_lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[attack_date (uboat-targets)]' derivation='Year' name='[yr:attack_date (uboat-targets):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:loss_type:nk]' />
              <groupfilter function='member' level='[none:loss_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:nationality:nk]' />
              <groupfilter function='member' level='[none:nationality:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]</column>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]' field-type='quantitative' max='10972465.237360917' min='-10315650.298941351' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]' field-type='quantitative' max='38250562.497356907' min='-38250562.497356899' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[attr:name:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[attr:ship_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.11994475126266479' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]</rows>
        <cols>([excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[yr:attack_date (uboat-targets):ok] * [excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Attack Map (Tonnage)'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data) (2)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)'>
            <column aggregation='Avg' datatype='real' name='[attack_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[attack_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[ship_name]' derivation='Attribute' name='[attr:ship_name:nk]' pivot='key' type='nominal' />
            <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
            <column-instance column='[attack_lat]' derivation='None' name='[none:attack_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attack_lon]' derivation='None' name='[none:attack_lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[tonnage (uboat-targets)]' derivation='None' name='[none:tonnage (uboat-targets):qk]' pivot='key' type='quantitative' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column caption='Tonnage (Uboat-Targets)' datatype='integer' name='[tonnage (uboat-targets)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:loss_type:nk]' />
              <groupfilter function='member' level='[none:loss_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]' field-type='quantitative' max='8613166.0685573127' min='-12717611.021925926' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]' field-type='quantitative' max='11417333.322350292' min='-112069.2009569006' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='10000' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:tonnage (uboat-targets):qk]' min='0' palette='tableau-map-temperatur' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:tonnage (uboat-targets):qk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[attr:name:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[attr:ship_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='0.60370165109634399' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Attack Map (Type)'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data) (2)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)'>
            <column aggregation='Avg' datatype='real' name='[attack_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[attack_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[ship_name]' derivation='Attribute' name='[attr:ship_name:nk]' pivot='key' type='nominal' />
            <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
            <column-instance column='[attack_lat]' derivation='None' name='[none:attack_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attack_lon]' derivation='None' name='[none:attack_lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:loss_type:nk]' />
              <groupfilter function='member' level='[none:loss_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]' field-type='quantitative' max='10805958.467800083' min='-10524818.622683173' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]' field-type='quantitative' max='9782377.022052044' min='-1747025.5012551425' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:type:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[attr:name:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[attr:ship_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.77961325645446777' />
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Deaths Across Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Fate Dead' datatype='integer' name='[fate_dead]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[fate_dead]' derivation='None' name='[none:fate_dead:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_dead:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[pcto:cnt:name:qk:2]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Fate Accross Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Survival Rate' datatype='real' name='[Calculation_704250407341625344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[fate_survivors]/([fate_survivors]+[fate_dead])' />
            </column>
            <column-instance column='[Calculation_704250407341625344]' derivation='Avg' name='[avg:Calculation_704250407341625344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fate_type]' derivation='Count' name='[cnt:fate_type:qk]' pivot='key' type='quantitative' />
            <column caption='Fate Dead' datatype='integer' name='[fate_dead]' role='measure' type='quantitative' />
            <column caption='Fate Survivors' datatype='integer' name='[fate_survivors]' role='measure' type='quantitative' />
            <column caption='Fate Type' datatype='string' name='[fate_type]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[fate_type]' derivation='None' name='[none:fate_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Decommissioned&quot;</bucket>
              <bucket>&quot;Surrendered&quot;</bucket>
              <bucket>&quot;Given&quot;</bucket>
              <bucket>&quot;Grounded&quot;</bucket>
              <bucket>&quot;Scuttled&quot;</bucket>
              <bucket>&quot;Destroyed&quot;</bucket>
              <bucket>&quot;Damaged&quot;</bucket>
              <bucket>&quot;Captured&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>&quot;Sunk&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]' direction='DESC' using='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:fate_type:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]' value='47' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]' />
              <text column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[avg:Calculation_704250407341625344:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[pcto:cnt:name:qk:2]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Fate Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[fat_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Fate' datatype='date' name='[fate]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[fate_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Fate Type' datatype='string' name='[fate_type]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[fat_lon]' derivation='None' name='[none:fat_lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fate_lat]' derivation='None' name='[none:fate_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fate_type]' derivation='None' name='[none:fate_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[fate]' derivation='Year-Trunc' name='[tyr:fate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]' included-values='non-null' />
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]'>
            <groupfilter function='member' level='[none:fate_type:nk]' member='&quot;Sunk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]</column>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]' field-type='quantitative' max='24179938.591406658' min='-18481615.589559808' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_lat:qk]' field-type='quantitative' max='16015036.00921884' min='-7043769.0373955797' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:fate:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:fate:qk]' />
              <tooltip column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[attr:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='has-stroke' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='mark-color' value='#6f95bf' />
                <format attr='mark-transparency' value='188' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_lat:qk]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Nationality Sunk over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Attack Date' datatype='date' name='[attack_date]' role='dimension' type='ordinal' />
            <column-instance column='[ship_name]' derivation='Count' name='[cnt:ship_name:qk]' pivot='key' type='quantitative' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[attack_date]' derivation='Month-Trunc' name='[tmn:attack_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:nationality:nk]' />
              <groupfilter function='member' level='[none:nationality:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Argentinian&quot;</bucket>
              <bucket>&quot;Australian&quot;</bucket>
              <bucket>&quot;Belgian&quot;</bucket>
              <bucket>&quot;Brazilian&quot;</bucket>
              <bucket>&quot;Canadian&quot;</bucket>
              <bucket>&quot;Chilean&quot;</bucket>
              <bucket>&quot;Chinese&quot;</bucket>
              <bucket>&quot;Colombian&quot;</bucket>
              <bucket>&quot;Cuban&quot;</bucket>
              <bucket>&quot;Danish&quot;</bucket>
              <bucket>&quot;Dominican&quot;</bucket>
              <bucket>&quot;Dutch&quot;</bucket>
              <bucket>&quot;Egyptian&quot;</bucket>
              <bucket>&quot;Estonian&quot;</bucket>
              <bucket>&quot;Faroese&quot;</bucket>
              <bucket>&quot;Finnish&quot;</bucket>
              <bucket>&quot;French&quot;</bucket>
              <bucket>&quot;German&quot;</bucket>
              <bucket>&quot;Greek&quot;</bucket>
              <bucket>&quot;Greenlandic&quot;</bucket>
              <bucket>&quot;Honduran&quot;</bucket>
              <bucket>&quot;Icelandic&quot;</bucket>
              <bucket>&quot;Indian&quot;</bucket>
              <bucket>&quot;Irish&quot;</bucket>
              <bucket>&quot;Italian&quot;</bucket>
              <bucket>&quot;Latvian&quot;</bucket>
              <bucket>&quot;Lebanese&quot;</bucket>
              <bucket>&quot;Lithuanian&quot;</bucket>
              <bucket>&quot;Mexican&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Nicaraguan&quot;</bucket>
              <bucket>&quot;Norwegian&quot;</bucket>
              <bucket>&quot;Palestinian&quot;</bucket>
              <bucket>&quot;Panamanian&quot;</bucket>
              <bucket>&quot;Polish&quot;</bucket>
              <bucket>&quot;Portuguese&quot;</bucket>
              <bucket>&quot;Romanian&quot;</bucket>
              <bucket>&quot;South African&quot;</bucket>
              <bucket>&quot;Soviet&quot;</bucket>
              <bucket>&quot;Spanish&quot;</bucket>
              <bucket>&quot;Swedish&quot;</bucket>
              <bucket>&quot;Syrian&quot;</bucket>
              <bucket>&quot;Uruguayan&quot;</bucket>
              <bucket>&quot;Venezuelan&quot;</bucket>
              <bucket>&quot;Yugoslavian&quot;</bucket>
              <bucket>&quot;American&quot;</bucket>
              <bucket>&quot;British&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='GT Pressura Mono' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tmn:attack_date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 15 Commanders'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column-instance column='[ship_name]' derivation='Count' name='[cnt:ship_name:qk]' pivot='key' type='quantitative' />
            <column caption='Dead' datatype='integer' name='[dead]' role='measure' type='quantitative' />
            <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
            <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[uboat_commander]' derivation='None' name='[none:uboat_commander:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[dead]' derivation='Sum' name='[sum:dead:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tonnage (uboat-targets)]' derivation='Sum' name='[sum:tonnage (uboat-targets):qk]' pivot='key' type='quantitative' />
            <column caption='Tonnage (Uboat-Targets)' datatype='integer' name='[tonnage (uboat-targets)]' role='measure' type='quantitative' />
            <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:loss_type:nk]' />
              <groupfilter function='member' level='[none:loss_type:nk]' member='&quot;Damaged&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Damaged&quot;</bucket>
              <bucket>&quot;Captured&quot;</bucket>
              <bucket>&quot;Total Loss&quot;</bucket>
              <bucket>&quot;Sunk&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([ship_name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:uboat_commander:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]' direction='DESC' using='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' />
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</column>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]' scope='cols' value='Kills' />
            <format attr='subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]' scope='cols' value='true' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
            <format attr='hnlabel' value='horizontal' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='GT Pressura Mono' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:tonnage (uboat-targets):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
              <text column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</rows>
        <cols>([excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk] + ([excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:tonnage (uboat-targets):qk] + [excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Top 15 Commanders (Ships Sunk/Month)'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Ships Sunk / Month' datatype='real' name='[Calculation_1035264973625937920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([ship_name])/COUNTD(MONTH([attack_date]))' />
            </column>
            <column caption='Attack Date' datatype='date' name='[attack_date]' role='dimension' type='ordinal' />
            <column-instance column='[ship_name]' derivation='Count' name='[cnt:ship_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[uboat_commander]' derivation='None' name='[none:uboat_commander:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1035264973625937920]' derivation='User' name='[usr:Calculation_1035264973625937920:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([ship_name])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='%null%' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Adalbert Schnee&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Adolf Cornelius Piening&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Adolf Graef&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Adolf Oelrich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Albert Kneip&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Albert Lauzemis&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Albrecht Achilles&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Albrecht Brandi&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alexander Gelhaar&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alexander von Zitzewitz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alfred Eick&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alfred Manhardt von Mannstein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alfred Schlieper&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Arend Baumann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Asmus Nicolai Clausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;August Maus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Axel-Olaf Loewe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Bernhard Müller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Bernhard Zurmühlen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Bruno Barber&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Burckhard Hackländer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Burkhard Heusinger von Waldegg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Carl Borm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Carl Emmermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Christian Reich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Claus Korth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Claus von Trotha&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Clemens Schöler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Detlev Krankenhagen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dierk Lührs&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Diether Todenhagen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Borchert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Gengelbach&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Knorr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Lohmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Sachse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Schöneboom&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich von der Esch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Dahlhaus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Greger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Hoffmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Hüttemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Wetjen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Zimmermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;EdU-Ard Aust&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;EdU-Ard Turre&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Egon Reiner Freiherr von Schlippenbach&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eitel-Friedrich Kentrat&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Emil Klusmeier&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Engelbert Endrass&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Harms&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Lilienfeld&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Mäder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Taschenmacher&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Topp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Würdemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Bauer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Cordes&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Hechler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Heydemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Kals&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Mangold&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Mengersen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Sobe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Vogelsang&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst-August Rehwinkel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst-Günter Heinicke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst-Ludwig Balduhn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst-Ulrich Brüller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erwin Manchen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erwin Rostin&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Franz Gramitzky&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Franz-Georg Reschke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fridtjof Heckel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Altmeier&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Breckwoldt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Bürgel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Deetz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Guggenberger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Markworth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Mumm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Schumann-Hindenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Steinhoff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich von Hippel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Georg Herrle&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Hermann Praetorius&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Karl Marks&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Wilhelm Marienfeld&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Wilhelm Sons&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Wilhelm Wissmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Frauenheim&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Hein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Hoeckner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Meyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Parduhn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Schneewind&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz-Julius Lemp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg Hagene&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg Lassen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg Schewe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg Staats&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg-Werner Fraatz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg-Wilhelm Schulz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerd Kelbling&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerd Schaar&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerd Schreiber&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Bigalk&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Feiler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Groth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Matschulat&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Meyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Palmgren&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Remus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Seehausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Stoelker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Wiebe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Wysk&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gert Mannesmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gert von Mittelstaedt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gottfried Holtorf&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Götz Baur&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Götz von Hartmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Gretschel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Hessler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gunter Jahn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Kuhnke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter La Baume&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Poser&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Wieboldt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Dangschat&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Heinrich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Heydemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Krech&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Lorentz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Müller-Stöckheim&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Pfeffer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Prien&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Pulst&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Reeder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Rosenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Ruppelt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Seibicke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gustav Poel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gustav-Adolf Janssen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gustav-Adolf Mugler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hannes Weingärtner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hanns-Ferdinand Massmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Benker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Dunkelberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Ey&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Falke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Gilardone&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Heidtmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Hilbig&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Hildebrandt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Homann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Hornkohl&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Hunger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Ibbeken&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Jenisch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Karpf&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Lehmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Meckel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Oestermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Pauckstadt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Reimers&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Rudolf Rösing&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Senkel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Stock&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Achim von Rosenberg-Gruszcynski&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Adolf Schweichel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Albrecht Kandler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Bernhard Michalowski&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Diedrich Freiherr von Tiesenhausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Dieter Heinicke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Dieter Mohs&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Erwin Reith&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Georg Fischer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Georg Friedrich Poske&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Georg Hess&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Georg Trox&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Gerrit von Stockhausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Gert Mahrholz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Günther Kuhlmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Günther Lange&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Günther Looff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Hartwig Trojer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Heinrich Barschkis&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Heinrich Döhler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Heinrich Giessler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Heinz Linder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Hermann Fitting&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Bertelsmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Drewitz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Ernst&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Förster&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Gutteck&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Hesse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Horrer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Schwantke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Schwarz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Schwebcke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim von Morstein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Auffermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Haupt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Hellriegel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Lauterbach-Emden&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Sthamer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Zetzsche&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Karl Kosbadt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Ludwig Witt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Martin Scheibe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Peter Hinsch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Rutger Tillessen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Werner Kraus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Werner Neumann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Werner Offermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Wilhelm von Dresky&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hanskurt von Bremen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harald Gelhaus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harald Grosse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harald Jeppener-Haltenhoff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harald Jürst&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hardo Rodler von Roithberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harro Schacht&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harro von Klot-Heydenfeldt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hartmut Graf von Matuschka, Freiherr von Toppolczan und Spaetgen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hartwig Looks&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heimar Wedemeyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heino Bohmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Bleichrodt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Brodda&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Bruns&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Driver&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Göllnitz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Hasenschar&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Heinsohn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Lehmann-Willenbrock&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Liebe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Müller-Edzards&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Niemeyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Schäfer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Schmid&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Schonder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Schuch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Timm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich von Holleben&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Zimmermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich-Andreas Schroeteler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Beduhn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Bielfeld&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Blischke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Buchholz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Buhse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Eckelmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Geissler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Hirsacker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Kummetat&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Scheringer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Schomburg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Sieder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Stein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Sternberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz von Reiche&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Walkerling&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Eberhard Müller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Ehlert Clausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Joachim Neumann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Otto Schultze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Wilhelm Eck&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Bork&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Fiehn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Friedrich Witte&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Frömsdorf&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Köppe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Manseck&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Möhlmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Rosenbaum&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Schmoeckel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Vogler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmuth Christiansen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmuth Pich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmuth Ringelmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmuth Wehrkamp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Brünning&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Engel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Juli&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Kuppisch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Meyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Opitz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Schneider&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Schultze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Sickel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Sohler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Uhlig&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Wohlfarth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Zoller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert-Viktor Schütze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Eckhardt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Hesse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Kottmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Rasch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Stuckmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hilmar Siemon&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hinrich-Oscar Bernbeck&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Deckert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Degen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Dieterichs&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Hamm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Hepp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Höltring&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Kremser&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Schünemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Uphoff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst von Schroeter&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Wellner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Wilhelm Kessler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst-Arno Fenski&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst-Tessen von Kameke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hubert Nordheimer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hubertus Korndörfer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hubertus Purkhold&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hugo Förster&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Berger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Brünner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Deecke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Franze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Matz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Preuss&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Schepke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Zander&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johann Jebsen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johann Mohr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johann-Otto Krieg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johannes Franz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johannes Habekost&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johannes Liebe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johannes Meermeier&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Josef Röther&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jost Metzler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Könenkamp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Krüger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Kuhlmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Nissen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Oesten&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen von Rosenstiel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Wattenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kai Lerchen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Brandenburg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Daublebsky von Eichhain&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Fleige&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Grafen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Hause&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Neitzel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Nielsen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Thurmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Ernst Schroeter&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Franz Heine&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Friedrich Merten&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinrich Jenisch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinz Herbschleb&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinz Lange&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinz Moehle&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinz Wendt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Hermann Schneidewind&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Horst Horn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Jürg Wächter&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Otto Schultz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Wilhelm Pancke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Andersen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Ewerth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Hänert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Hartmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Heinrich Bargsten&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Hornbostel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Petersen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Popp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Rudloff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Scholtz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus-Helmuth Becker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klemens Schamong&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Konstantin von Puttkamer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Baberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Diggins&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Dobratz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Freiwald&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Lange&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Makowski&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Neide&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Nölke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Petersen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Reichenbach-Klinke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Sturm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt von Gossler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt-EdU-Ard Engelmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Leonhard Klingspor&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ludwig Forster&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ludwig Mathes&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Manfred Kinzel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Martin Landt-Hayen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max Dobbert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max Kruschka&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max Wintermeyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max-Hermann Bauer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max-Martin Schulte&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max-Martin Teichert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Odo Loewe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Oskar Curio&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Oskar Herwartz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Oskar Staudinger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Oskar-Heinz Kusch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Fechner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Ferro&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Harms&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Hartmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Ites&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Kretschmer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Luther&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Salman&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Schuhart&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Stoeffler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto von Bülow&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Westphalen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ottoheinrich Junker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ottokar Arnold Paulssen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul Büchel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul Hartwig&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul Just&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul Siegmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul-Friedrich Otto&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul-Hugo Kettner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul-Karl Loeser&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter Gerlach&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter Lohmeyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter Zschech&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter-Erich Cremer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter-Ottmar Grau&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Philipp Schüler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ralf von Jessen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ralf-Reimar Wolfram&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ralph Kapitzky&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reiner Dierksen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reinhard Hardegen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reinhard Suhren&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reinhard von Hymmen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reinhart Reche&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Richard Becker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Richard von Harpe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Richard Zapp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Robert Bartels&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Robert Gysae&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Robert Schetelig&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Borchers&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Dau&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Manke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Mützelburg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Nollmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Rüggeberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Struckmeier&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Thomsen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf-Birger Wahlen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf-Heinrich Hopman&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Arendt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Bahr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Baltz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Franzius&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Friedrich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Heinz Franke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Hinz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Meyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Premauer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Schendel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rupprecht Stock&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Freiherr von Forstner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Hesemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Keller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Kietz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Koitschka&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Lüdden&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Rollmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Strelow&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Sigurd Seeger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Theodor Fahr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Udo Behrens&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Udo Heilmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Borcherdt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Folkers&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Gräf&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Graf von Soden-Fraunhofen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Heyse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Pietsch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Thilo&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Unno von Fischel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Victor Oehrn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Victor Vogel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Victor-Wilhelm Nonn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Viktor Schütze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Volker Simmermacher&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Waldemar Mehl&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Burmeister&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Dankleff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Flachsenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Freiherr von Freyberg-Eisenberg-Allmendingen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Göing&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Kell&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Schug&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter von Steinaecker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walther Huth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walther Kölle&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Czygan&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Hartenstein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Hartmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Heidel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Henke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Krüer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Lott&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Musenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Pfeifer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Pietzsch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Riecken&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Schulte&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Schwaff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner von Schmidt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Weber&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Winkler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Winter&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Witte&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner-Karl Schmidt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilfried Prellberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilfried Reichmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Ambrosius&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Brauel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Dommes&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Franken&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Fröhlich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Kleinschmidt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Müller-Arnecke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Rollmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Schulze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Spahr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm von Mässenhausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm von Trotha&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Zahn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Willi Dietrich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Willy Ohlenburg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolf Henne&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolf Jeschonnek&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolf-Harro Stiebler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Boehmer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Hermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Herwartz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Kaufmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Leimkühler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Ley&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Lüth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Riekeberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Schultze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Sträter&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]' direction='DESC' using='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[usr:Calculation_1035264973625937920:qk]' />
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='cols' value='Ships Sunk' />
            <format attr='subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='cols' value='true' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
            <format attr='hnlabel' value='horizontal' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='GT Pressura Mono' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[usr:Calculation_1035264973625937920:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[usr:Calculation_1035264973625937920:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</rows>
        <cols>([excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk] + [excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[usr:Calculation_1035264973625937920:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Top 15 Commanders (Success across time)'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Attack Date' datatype='date' name='[attack_date]' role='dimension' type='ordinal' />
            <column-instance column='[ship_name]' derivation='Count' name='[cnt:ship_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[uboat_commander]' derivation='None' name='[none:uboat_commander:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[attack_date]' derivation='Quarter-Trunc' name='[tqr:attack_date:qk]' pivot='key' type='quantitative' />
            <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([ship_name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:uboat_commander:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]' direction='DESC' using='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' />
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
            <format attr='hnlabel' value='horizontal' />
            <format attr='width' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' value='24' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tqr:attack_date:qk]' field-type='quantitative' max='#1945-05-23 06:09:15.428#' min='#1939-09-01 17:50:44.571#' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tqr:attack_date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tqr:attack_date:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' num-steps='5' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='GT Pressura Mono' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' />
              <text column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='409' />
                <format attr='maxwidth' value='409' />
                <format attr='minheight' value='47' />
                <format attr='maxheight' value='47' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk] * [excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk])</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tqr:attack_date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Map'>
      <style />
      <size maxheight='300' maxwidth='400' minheight='300' minwidth='400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99000' x='0' y='0'>
              <zone h='100000' id='1' name='Fate Map' show-title='true' w='99000' x='0' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' name='Top 15 Commanders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:Calculation_837106586779148289:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:commander:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 15 Commanders (Ships Sunk/Month)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:Calculation_1035264973632987138:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:Calculation_837106586779148289:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:commander:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 15 Commanders (Success across time)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:Calculation_837106586779148289:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:commander:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:attack_date (uboat-targets):ok]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:attack_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Fate Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:fate:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:fate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Attack Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:attack_date (uboat-targets):qk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:attack_date (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:fate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Attack Map (Tonnage)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:tonnage (uboat-targets):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fat_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fate_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fate_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:tonnage (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[tyr:attack_date (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[yr:fate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Attack Map (Type)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fat_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fate_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fate_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:tonnage (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[tyr:attack_date (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[yr:fate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Attack Map (Commander)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:uboat_commander:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fat_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fate_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fate_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:tonnage (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:uboat_commander:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[tyr:attack_date (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[yr:fate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Attack Map (Nationality)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:attack_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fat_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fate_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:fate_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:loss_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:nationality:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[none:tonnage (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[tyr:attack_date (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[yr:attack_date (uboat-targets):ok]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot (copy)].[yr:fate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Nationality Sunk over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:attack_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Map'>
      <viewpoints>
        <viewpoint name='Fate Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:fate:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Deaths Across Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_dead:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_dead:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Fate Accross Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_dead:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[usr:Calculation_1035264973625937920:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Top 15 Commanders' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 15 Commanders (Ships Sunk/Month)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 15 Commanders (Success across time)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fate Map' width='192'>
      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
      5zgZ/H9MT0/ydiQxtQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Attack Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Attack Map (Tonnage)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Attack Map (Type)' width='192'>
      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
      rCC/gwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Attack Map (Commander)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Attack Map (Nationality)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO19WYxk13ned5e6tVf1MvtwOCRHlLkMJYtaTNOSY0V2EiRxEsdB/JI8JA9B
      3oIABvISBHKABAjyEhgw8hYYQRDEiZ04i2zLEuRYYixqp6SxuA/J2Zfume5a7q2756H5nf7v
      qXOrqpeZIafuBzS6u5Z7z3/+/T//OdfK8zxHhQpLCvtBD6BChQeJSgEqLDXcBz2AChX2izxL
      8fK3v4uuZ2EjzPHEiSPorqxiMNjA1raFZ58+g2+89E2sHj2BtXYdmxsbWDt5Gr3+KuxwiLff
      u1EpQIUPLwa3LuHWrVu4U+ug3XXw9k9+gMt+E585fwTff+U6nnv6NOrtPqLRHbzx3g1sjmtw
      r13DmTPn0K3bsNIJrCoJrvBhhT8eo96s486tDaS2izQO0Gq2MIkT1J0auit9XHnvIlaPncJ4
      +w7q9QbSNEGjswIrHCB1mzsKQB2wLOsBk3T4yPP8oaULqHh2UKgkOAiC+3LD+42Hla4oipCm
      6YMexj3B/eTZfcsBrrz1I2z6DjY27+LM6XXc3djEMMjwwudeRMf78KYiSejj5e9fQNtN0Vw9
      gdvXr2K124DTPoKnn3zsQQ/vQHj1+/8PqbeK2wMfzzzax8bIxt2tO/jsC59+0EM7EILhHfzo
      9XeR+9v3rwza63YQpxmGm7eRuQ2MRkOMtjbghx9uK+bWW3CQwrIsvPvaj/D2e1exPckw3Np8
      0EM7MDqtBlLY2Lh+HW9cvIjtUQgnTx70sA6MZreHLA6BNNrNAYIgQKvVumc3TeMJwiTH9tYA
      7aaLzK7DH49x8sRx3Mtwz/f9e0oXAAyHQyShj3p3HXkSIo0COM0e2g3vnt0zDEM4jgPXvXfe
      MwzGyGBje+jj2HofkyhFmkTodrv37J7A/eBZjuFwjIk/3FUA3/fRbDbv4U0fDO6HAjwIRFEE
      27bvqQI8KNxPnqnZi+MYtv3wLQzHcYwwDB/0MA4d5NfDmAjfT54pBfA876H0AHmeP5R02bZ9
      z0OgB4X7ybOHz+RXqLAHVApQYalRKUCFpUalABWWGpUCVFhqVApQYalRKUCFpUalABWWGpUC
      VFhqVApQYalRKUCFpUalABWWGpUCVFhqVApQYalRKUCFpUalABWWGpUCVFhqVApQYalRKUCF
      pUalABWWGpUCVFhqVApQYalRKUCFpUalABWWGpUCVFhqVApQYalRKUCFpUalABWWGpUCVFhq
      VApQYalRKUCFpUalABWWGpUCVFhqVApQYalRKUCFpUalABWWGpUCVFhqVApQYalRKUCFpUal
      ABWWGpUCVFhqVApQYalRKUCFpUalABWWGpUCVFhqVApQYalRKUCFpUalABWWGpUCVFhqVApQ
      YalRKUCFpUalABWWGpUCVFhqVApQYanhHvQCeZ4DAJIkQRzHyPMc9XodjuPAsqwDD/BBI89z
      xHGMOI5h2zbq9Tps++GwG2maIgxDZFmGRqMB1z2wOHwgkOc5wjBEkiRwXRf1er1UFmdSTOYn
      SYIsy+B5Hmq1mroY3w+CAGmaFm6+srLygVaAPM+RJAnSNFVKa1lWgbYwDJWAUNHTNEW73f7A
      0pbnObIsQ5IkSJLEaIySJIHv+8iyTNGWJAm63S4cx3mAo58N0pVlGQDA87yCMcrzHEEQII5j
      JY9RFCHLMjSbTSPPjArASYyiCL7vw7IsJRCe56HT6ahJ480oIBzoeDxGp9P5QApKmqYYj8eI
      41i95vs+ut0uarUagB0hCcNwirYwDOE4DprN5n0f9zzkeY4oijAajdRrYRjCdV10u10AUHxN
      kgR5niv+JEmC4XCIfr//geMZ5XE4HCrBBnZ41uv1lNLGcawEnjyjUriuC8/zpq49pQB5niNN
      U4xGo8LNHMdR//u+jziOYVlW4WaWZcG2bTiOA9d1kSSJsj4HndQsy9Q19nsteqzxeKysCMec
      piniOFZCL7/D+9m2Ddd1YVkW0jRVdB0WbQe5Do1OFEWKLhquNE0xmUwQhiFs21a0E7Ztw7Zt
      eJ6HNE1h2/ah0CUNx0F4FkURxuPxFC/SNC0osxR6fs5xHNRqNaVEOl2ufrMsy4xCIC82Ho+N
      hNEr0LXGcazcT71e3/cEADuWjNeQYQr/5wSUMY6CQNdP2LaNPM+VO51MJka6AKiJ5sRnWYZ+
      v78vunhdMrhWqynBK5sDfVxElmWYTCZK+Pkdx3GQZRk6nQ6GwyEAKMWVwkJ+ZVmmDEGr1Tow
      z6IoUgZjP3RRnij8kq48z9FsNpWc6dcw8WwymcCyLHS73V1F0m86Go3UTSRDsiyD4zgqJJIW
      xkRImqZIkgS1Ws3oeuRAde0lkiRBFEUqzKLnkd+lMOd5jvF4jCAISu81Go0UQzhWhjiWZSEI
      gqk8QEJaVMbXs6DPjXyd3iYMQ8RxjMlkUjA6MvRK0xTb29uF9yX4XYYCMqxxXXfKYJl4JsNc
      27ZVKDiLLhNtNKAMIYMgmFJMmS8GQVAYn36t8XhcyDs5H3w/iqICz0zeTeZ7ekJc8AC0AGma
      KkHh4F3XVRfjZJWFJNJjlGXg0krEcQzHcdBoNAqfYYhFZfQ8r1Cp0BMgKkeWZYX3aCUoVLVa
      TdEJAI1GA1EULeSy+ZlarYZGo1FKG4UpTVNlBPI8V+Mioxh+NBqNQgKqJ6NMAPWEVnoj8ihJ
      EnUN13ULAlhGm/SmrVbLWOmSChkEAWzbRrPZVAaTn2EY5bouHMcpGEDLsgqKSgut84yeiDyq
      1WqFBLjZbML3faMim8YM7PBZN8au/CAHx+SWF3RdF61WS7la/cLSpUrUarXS0hqTGjl5vBYh
      lcJkkUzxeRRFKkmlAvFajH9lAuh5nhJkeg893zDRVlZVAHbCNTlPnAMy2LIs1Ov1whh09y2V
      hUoymUyUUAFQhsp1XWV15dy12204jjNFlzRicg4ZCs4qh25vb6ux8XpScB3HQavVArDLM0mb
      FHTLslCr1eD7PqIoUsZSXld6aY610WigXq+rCEEPf010sYSt80yNfDweYzKZKGHgJJCBYRgW
      XFVZLVwKzjw3SuGkgpkETYZb+uDl/5Zlod1uo9VqqdBCT+gpaPJ7ZEAQBIWJk2PRx0WBLAOZ
      mGUZ2u22sv6z5kp/XV7ftm10u114nleohIxGI8RxrEIEXRCzLFMCK+dS0qXPoQwRTeAcOY6D
      Xq83FXLI+5h4ps9bo9FAu91WFUfmRPybtOk8Gw6HBa/N6ESfW/5NA6hDvcIbZVmGbrerPszE
      l4tcnATThM57T4KuUWrsQRaY+H1OKBXYcRzl1aR1AjAV5hE680xMnEUbrWitVkMYhlPCuR/a
      GE5Kz9NoNFR4J2mmh6ER4DV0euYpngks/zJ8Oci6gbTonucpQyFL0aRZhp704jrK6ALKDbZ6
      1fO8ggtimEBmLrpKyIEyGSoDmeR5HprN5kICQouuJ4MysWKYxmoPqwVMWOXiT71enxmmldFm
      GoNOW61WQ71eL80TTNfmnOuvyxhZLs7VajU1dwwVAKgkVg+t5tEl86hZdDH/WVSpywRWygqA
      Qnm61WophZAhUKPRUBUzeY15MM0tIHKAIAiQJImK7er1ukqsgB1rIwVAVl90d0NrPCsEAnZz
      hEWYxMQry7KCFZcukAk1iWXlhBZUKgSTayoix6BXmUy0lblTCeYue6Etz/PCKrO8P2N8VjMY
      0gVBAM/z4Pt+Ia8AdowaWzhkuGCKjxl3z+MZc4tFDdZkMkEcx4UCh4wS2GZCpR4MBkq+mPgy
      2aYRIM/IW/JMXlcfh7E1Z3RrVwE8z1Ohgkx2KRxyNTEMQ4xGo0LSoYMVpXlY1EKx/NrpdKaq
      P8BuPCzdOGveFARaWakIpJHCMxqNVGlNXl+CDJrl/svmRQeLAUzs9PlIkkTlMDQqVHBWsygA
      FKJWq6V4Q555nofBYDBFlxwn4+95nkMm0rPg+75qHTHNlVy4Y6gaRZGq+NFr8DUAaLfbAHZD
      MRo6mYuY5p18l54jTZJdBaCGcCVXCpJOLJVFrqbKm3Py51mTRUHhZWuFnqCylk7U63VMJhO1
      AkiXmSSJcqsm5jEenbWwIufoMMBFMAq/pC3LskKflVQA5hiu606txnOhSE8cXddVRkFCflav
      ue8XzE16vd5UgkqrLb0ScxYqgjTILF2aFI88o4HU6ZJzInmWZDkuxb1dBeAqGbDjvplA0Yro
      cTKXossGtpe8YRYo4FJAmFhalqVcLJFlGXzfV+PiCqBs6OPEh2GIXq9XGLesZ5ugh0yzMO8z
      HINUbBnKjEajgmVjeEe6GDpQMaRAsfokQYHi2HQa9Zr9fukCoDwJjSiNmOM4qi2DcwBAVRjZ
      csPVX1Yh6fWiKJrqMXNd1+jR5Hj1XKzm2Dh3tFNMgmu1WqF3ggMcj8eFlUm9SmIqGervzwoH
      mOSZSmoMW2TYEwQBJpNJIWmSxPK3XPgCoBJhmcsw9jZdo2yssgq0CG1ln+H45OIYV09lQ5vJ
      slGYmEN5nqc8ARVJT/zKvJ7u3Rahi5+R3keCbRD8HNdGRqNRISHWq22cE4ZhrHTxPlEUFapb
      s2iT4yRd0XgLUTBU7ympYs1atgYQ7BSUwibdiVQWCseiIQJd5WAwUBZPZ1q73VY5BS25/F1G
      NMcO7K726l6JwiaFYFbotpfQhwI9GAwwmUymDAUX+mgd+ZtJrmwZMJWVJ5NJYW7k2NI0xXA4
      LMyPrJ7oRYy9lGo51uFwiI2NjR0e3rxZeJ8LpzJRJW1lFRm+FsexCvHoSQjLsjAejwurwDQE
      8hoS9BBpluPq699DJnJTRTF7bbjoxRIhExguucubltWV9bYGE/OAHSaMRiO1ImxZVmGBQ65I
      AzurkAx/9OuSuaYJYKhAOll+pVtk0x6vyZYCCd6L9fh5tFEAGZtyIVGW9MhoWbEyXZd06bQl
      SaJC1zAMVUm01WqpHE2u33C1XOcZfxbhWZ7v9O9QuVqtFgZXryK4elV5BIak7EMaj8eF9gf5
      YypnyhxBtkLIVgZ97UbPXeQ9GNVYFnDkmZ9Ho7OiPlcwh2QOrTCFgRdnb7kubNKNMvZcJE68
      M5rg+sYIp1caqrHJtm0Mh0N0u10EQaAqAwQFWbZncyJNVSeOjTRRgZhkMan0fV+V90zhGBfR
      Finb0lUzXiddYRiqGJblP9mdKVusCc69znCOSVa1GM6xrRnYDUXIM1OdnzX3RTyA3g4ThiGs
      TgdRq4Wtl16C9/zzhXmWMsIknKjX60pBSTejCGko6D05F6wQ+b6vKl76vg3OXbPZ3G3JB9Bt
      FL27UgA2bbEEmKapsii8AC2prgAcNFtoyQxe09Q1mec5anmM0yuNQozG1VyW9OQCF++pW3oq
      jwSFiMJsWVbBypPhDB1ocegV9NCAK60UAK6VlCX6tMzSCjE8NCXuUuhl6CN7sqQwATseoNFo
      qDCHY2IYR4EPgkCFdXLe2B8jix78jGnDDwWbf+veN3nqqUIDm+w9knTp19Ittx4Gs+QsuxXY
      nRDHsfIKkmc0WLK3LcuyqaZDW78JhZWTR4IYt3ERiu6UN+31egVBpxUsS2yZ7AEorEDznrQM
      0n1zgvRwQL6mJ+Z8j2ENhZDtuhQySbts0bBtG/1+vxA6MBEro21wZ1O9xxVTLmDJEEGOX47Z
      9LpOmwxhKNxkNpvEmEdwcY2f5X1a7TY8b8dg/fjyHQCAP/ZL8yppaFg0AaDmMdMsvB4al/HM
      BGnxWdZlRQ+AKo9yDFIJarVaYaeYHQ4Q3r2KKIrw46vbhfso81Wr1dTFW62WCg04sSbm0BXp
      K6OMJxlm6Li8OULLilWbhW6RmQOYGC4nSH9P/xyTI3ZEygYuCih7S/SYm6U3PZyzrJ2yMJVj
      sLkB5Dlaq+u4thWgZqWINjfRPXJUJd4M59jROUuYTXTROMhx0PLTQNH70nCQLr2zlZ+BZeG/
      fucynll38fxHz6B98w3YZ15EI3BxLQFuT0ZYazpY6ex4AuY09MT0hp1OR63Qy3BO/l6UZ3Lc
      tm2rrYzdblfJomz70HNA5j1TPGt0MPItvHMrRKNe0g4dRVFhZRTY0Somb57nqVU4yQQZh0vQ
      2qZZDuQ5Lt/x4drArW0fdhygudoCHFt9TgqhJEwXAgkZOpniclpDJpt0f/wOVyKp8NKFtttt
      +L4/VRGi1Xr93es4fvwoVlfXEIxH+E9/+hP89ecfhYsM3vqR4hykqVIGfZy8nwzTTMquv0Zj
      xcSVoRuN0nA4hOu6UzVz9l5d3hihU7PxjXeH+PHF7+Hk8Ufw+tdfwVtpGy9fuIyzjxzBv/il
      s8jbO9eXCankWZ7v9FRJ2qQh0cMgnVc6XbLdg2EM1znyPFdlVNn8x+u0222lNIU5djycWHeR
      WAG2/EhVlvI831UAhjO6JScDGDIAUGEQbzoLW36EOM1x9co1vHx9gk8+0kN46wpO9j8C13VU
      0kZhZJxGQZNVJykcHKtJoHRvJRdSdIvDUiUNAAVetn5I3NjYwlt3Qvz+K7fRtG9gpe7i7t27
      GNy9i58+3UHmNvDksd1+Hi680TLr8TbnncrN/Mak0Pq42a/F16ThIM/ocWQY1Gq1sN7PMLx4
      Fz9z7jguv7uJlbaH//XSCG8mAzzeb+yslL59EU/1+sqLMpmO4xiTP/1T4OMfR9psqp1/erWq
      Xq+rMNfkEcq8BPkqZUDP6aIowmQyQafTUVGGDImSMMBLf/4O1o8cx1PH27hw4TWc/amnYVvA
      V37wDj57/lH0Wo1dBeANWd9l1x0JY/JHQZxleSVeuzHE2fUWjh0/gqezu7j02gV8/oWPq+X8
      RqOhVmo5cTLR4v3oAjkZMhHWrQz3BMjPMgySyT2Tfr1iolsy4u44wh9fuI7f/8kmrm2OcKLj
      YBzn+Gd/5SlsDX2cOnkCRzqe2rrZbDYxHo+NtAFQybfeclJWzqWx4KYfeRrCcDhUCsz3ZEcu
      qyXEe3cCTHLgM0+sYSXLMUSMX2i/jW7/kzjSrsGteTj77Bl18gJDYoaF8YkTSD0P+fu0yYY0
      3kdWiyRdeqgHQIVU9IIcPxf0GJ2wwsX7ycIFeTYIYvzBK1fRffcb+ORjfwsvf+e7iJ0mzjdq
      yAH85U89idFoiCRxd5NguSMnjmOMRiN1xgqrQExK9CX6WejVbYRRjGMtByd6DWy1TuDY8WNq
      UtnHIxkurYjcxFIWFpmSLa5FUAg46VEUYXt7u1CmpIBwb25ZYnbzboAfXhnBDsdYbdgYxRbO
      Hu2h6Tm4OkrRsGLFHHZq6queuoWUVlDSCBQXqwi2mLiuW9j/zI0/w+FQKRV5xo00kmdPtjI0
      J1vIcuBaHOH7b9xFcvpZPH2yByeLcWccYjDaaSmR2xY5rvzs2QIt0lpTIE00kWe6ZbcsSxlE
      JvE0vGEYYmtrS4VG/E673Z46DCAMAvzR//wvOJLcQq/dwO986asIbr+NVm8NFzfGWO/UEYUT
      OO+XpZ0vfvGLXwR2z1iRC02ycqEIf38iaGlmIc9z9OoOtkYBLm/vtPNujiKkaYLVhlNY8Szz
      JGXL5vI13kt2gXqepzaLN5tNNJvNgiLIVUoqPSsNZb0+a/UaLl66iS+c7OE6avjC08fx82db
      qNUbONWr4f986yIe79uw36/GmFbVOVaOU9KlC4quHOQBlcuydqpvkke8piyNchzbQYLXb41x
      aqUJawR8/PyjePXGEJdvbuKF1Q2MndO4OAxx9vgK/uGLZ9Go7W4hlQtT8/ZDSI9n8qYmnjEB
      Zr8T1yaYW/B6ct1A7RG+9n3UO2sYJjZ+87d/F3/jZ8/D6h7FBh7BnbiD55/9KHpHjuEjx3dC
      Wl4zjmNY+Q5w8+ZN1RbMbXb6CQu0JozD5p2QNg4T/Pp/ewV3B2NMUgu/8elHUD9ax1q/Acea
      bqEwoWwipQVhjF/WdchQDtixoHLPAIWLByfFcaxWik24PQxxeWOIbtPFb/3u9/Dy5gSPrHbx
      z3/5p9BzM/RbXuH+OvNNtOlxP2mTLcG0hnyfRoNdntw9xUZAXo/1c4ZbQV7D0W4dW7fvIJ1k
      6J7o4/uXh6jZOa6/dQW/+coG/slf/Ai+8NwZNGq2srB6abQsT9Hfl8IrPbYM5fRWZvKMssZc
      Qi7Qxts38OdXRvjMJ55B5A/Q7K1hHGUYvvVNfO1Shp8M2/jcyh2MJwE+8dxz6K4dwyPH1mC/
      P2auaSkPMB6PVb261Wqp6oIsbQG7iQaFdtbq4cZogpNdD5e2Y/z6F57A2ZMdNBsO7PfnTTJe
      CrjML+SGcplk8cxHWdI0MUXGk3TPTLLlxJMpjEXLFrjadRcnV1t4++YQdhjh7Hoff201w0dP
      raDZnl4BlxURnU5ViRD3YhFArmzrIZllWQWvSa/FKpecDyoSw9gbwwhHOnXc8BN8+cdv40zd
      x/9+w0e/ZuO3vnkFX/yV53D+RAMr3ba6tuwUNll0WVmj0rF0Ljs12W2qh1P6nLECxPfkfg01
      F04N670eXtuM4HoN/Psv/xA/d24dd+x13IpqOLHeR+/Yozh35hF86ce38MTJNTQ8D/XabtQS
      BEHxXCAOhLv0ZRmK8RkJWWRL3KmVFnqtBk726mi4QJgWF1HYb0QFazab6HQ6hVVIeeyGXCGU
      jXFlYYZeesvzXG3SaDabKjGktWFirB/PYsKzp1cQxCHOnWrh537pY3B7dcV8zpWcn263i3a7
      rRjJTR8y8ZPhGMMaPWkkbTq4uswVeS78cQ8x2wKeOtnH9e0J+u0G/v5f+GkkYRd/91NnkExG
      +Fe/9jwubY4xSl2VL3FeKbyyzT3Pd0qgnU5HzWWe7zbC6eOldddbTUwKTlABudahDHPo4/aP
      /wC3v/IlfPnVDazWcrx34w7+5M+vwU5j/NoLj+OTj63hSNvFL/30o7BrHv7jn70DYLfU6jjO
      9MlwwG5PvXS7pj0Bi+D5s6t44kgT6WSn37vRaKDVahViZB7vwYFxEijkjA31sZZNsmkiiSzL
      VK2YGzDKdizNwrUtH51jR+EPR8pCNptNVeZkSMJ+fZ4RxDmkBTed26NbxXm0UYEmk4nimS4w
      EqdWdg3M0SdO4E9ev4UXnz2DQWzh6eNtXNvycen2AB871VaxeafTKRicPM+RxzHy91vKqfxc
      yGw0GqqIIumaFerOygPplcPJBLeuvIfh1dfw7sXraD71eZxda+DmIENr9C5+9bMv4vLmGKNJ
      giDJcCy+ihvuY7h0dQufONrBJEqQJZEa85QCyCSRhNKi7BfXt0OsuEDdtQpb+mhBaKFkW7Ik
      vmzCTIssZRMphYjKB6BQR94LnjzRx4Wr2+h2WqrMyi2KvB5XNVmx0cuFsxa9yipRZXQxKZTe
      dJGjDes1By88sY523UUjyzGaxBgORjh/ehVJHiFLM3S7TTVW2f6S3b2LsNlEri0Wcg50GmTu
      IsdeRrM0yFRq+92v48RX/yW+1/wV3BjH2HzrBv7xkRztc4/i3PnHYFkWbt/eQi8D1tfbwPqn
      cPTGHdjtHGeO9/H27TG2t+/i3HobN/2smAOYWmV5yNSiveImHOnU8d337mC9YSGOI9Xrw2Yl
      ufFe7t+lFzCFOXKxRKIsnjTF5nIr4n7w9Kk+Hju+qhSaO51oNCgwDBkppATDAb0cuMh4ZJKr
      08XQZ1HF9qMUrgV86+tfw2NPfASTNMPXLlzBRpDjzRvbeGy1rhYL+RwB13Vhd7totNtK8ZVi
      aG3Yeh4kx8/35f/0lFM8A9D8s3+LWnALeRxg89TnUD/yKD7/4mewFSRoRUM0uz0cW+kASQbb
      e3+dJLcR5C5+7zsX8YvnT+HbX/t9ZGkLf/jOuFgFkpUPCjzPCNqPkHACeGS3SQi5jM74O03T
      mcepyO/KSpB+X74mD46SCbfjOIVDUvcLHiimM5ZVpclkotYyqPjzaJrlAaRhkArAvCLPcxWu
      7oW29zbH+A8vvYPf+JvnlacaDodTY2K3bpIk+MMfXsE1H/hHnz1bWPE1eTZJ3554lmXIkxCZ
      20Dn5rfRWDmO20kH21fewNqzP49hYmNlvI1mawWNo9NdCXme49995XV87MwqVlsePvHoCgaX
      LiCrryCrtYpJMCev3++j3+9PHbOxH3A5Xt6DvxmPs87MVT8pADJRlpCtzfK3/jfhOA76/T56
      vR76/f6BPBrvPxgMjMpKAeIGmMlkosp4cozyTB9+T/420WMSnHa7rXgmD65aFHmeI5oEOLvW
      VHwxVX5It+/7CMMQv/jMcfydjx1ReY4Maw+DZ1EUobP5I7R+7+/h6sYA4atfReCfwlbtKM5+
      4hfgXPgfsOMI79x8F5eSGP4kxJs3h4VrWJaFZ0/vbIBZb+8svKbd08hqrekcQJYd+X9ZCLEo
      9NVQYDr2k26fCz0ULK5QA7ubQ3RhkteU11XJWp4XQi0mdgdVbn2ha14uQmGXy/is1rDKJVei
      542Pn5NbHZl37IW2HMCrt0OkkwzffHsTHz/ZLJyMYapA8dotz1FCT0PHlXC5/qKffm2iRc5j
      nufYvn4V9voT6Jz/2zj5rX+NSbSNFDfweJzCcZ7Cm1Ef5979DmLbw+atG1irHcHjnaJhm8Qp
      njnVQ5RkWG3V4PvacwZ0wrj0TK0mQfrpyYtA7303lSb1mJfCKuNXCgXPztFdPMMZ+RrLgQzr
      KBS0yqzMmJ5wswjkxo9FaWMfjdyXK5vkuGItv8sn8kjh0A8UY3MYwxB6IH1PRRlsy8KRtoej
      R1q4OZx+zoBOlykkzvPiegYXz1hW7nQ6U/zpdDqF1mXSS96vnj4D27IQ/9QvY/XG19F59ldg
      v/RvELzyFXz7D34b60eOoj96GfX+Gj5zbh1rKz246aQwrjdvjTCJM5zsN1GzpsuvSgHYEuz7
      vjpWkN1/zOgX7f+Rk2WK+/WJ0xkUBEHhBId6vV7oZpQnV3iepx5tROHiPViP58bxwWCgFJkx
      etl+21m4PQwBq9h5uQhtrEDJXKterxe6a+X6AQWH+5clbfK98XisKmhM7ilEiyvB680AABR1
      SURBVPDstesDdBo13BlMcKJZvpg3i64wDFXJlUZMVti4cMn3yDM9DPQ8D61WS8mj2+0jb6xg
      81P/FO6Nb8F/9PNwhpfwkZt/jJVeH6+f+GXUjn0Et7/7bXztjTvw3ZXCWBuujdOrTTS94pOK
      OP7ChhjGj2wKI1EMjfR9wPOgx3z6d01CxyRqMpmolgTdI8hQjQ+BozJYlqW2LDKfYH2elRrf
      99UJc3IfwqJhw+bVy+g+fmYqPNA9mQkMe2S3rR4LMwSUi0tcEGQbBxemKHRRFKkffpZJK8dT
      Rtvp1SZe+skV/OonzyC8tntAgYm2WTzzfb8Q+uhVKNIqn0hJRaFnlguwPA4xDEPgk7+Gq299
      F+fO/ww2vl7DjVGI9e/9ZwSXLuLr2ZN45OQq+r3HMYz64MmZeZ5ja7jTuNjst410TeUAHKht
      26rnWrYWA7u183nCQkJ4hAWt96yDUoHdvheWCU19+aYSJi1Ju91WC1HykUeWZamuT7p5ntrA
      5fxFzr089/gZXBuE6NZcII3VeORGbhNtHKtsXjP1HHGjkV4OlMeo6IkkE0+ev0MjQFpoUU08
      uzOOsNbvoF4Dxg0Xf/S1b+Avfe4F1Jxdq6x37Op0UQlky7QO7kGW4Hcp7KSB77EMn6Up7lz8
      EU4+/SKyc5/H+pmnURvfxBO3f4ja8AfY3DyPT6y1cPfdHyB77meQZxmGdzbhj3yMr1/D+rMr
      QOdRxNkErrXb1qPWARivyUExoZJ93Yw3TVshdZAA/lBo9bYGXTOlZZa7+nVwkqULZdWFrlVu
      mpaMYHMYcxQKHC3srCMCHdeF49j48g+v4JlH1lQJly5ejzN170LBnKVs5IXscOXcN5tNlcfo
      G5ioMDIfkHSRdoles4ZXf3IBSZbhzRsh3vEt9ELgxMkebMfFe9sxjvUaU8otaZI9SPRuplBK
      7l8m5IEEJp5ZloWa5+HUMy/sGOOaA7ezDqycQX7uC9i2j+JofYibRz+G9rFHYE3GqLfbcGou
      6ukEox/9XwyOP4Xf+eNv4r+/GaHf8rBeT3H55u3ddYAgCNRDKmRNmf3lcjCy+rCfNgImoyy1
      yYnkkz+yLFOhy8LVjHz34Qo8emQymWBtbU29TxrSNMVgMDDGyDJsKrv3nXGEu6MATxzrqe/w
      Htvb24VyLhNHeepGp9PZ09mpeb572luv18P29rZKLPk+x8C5NYE73SzLQh6myMYx3PUmLt4e
      4WS/gddv7vy2ABzt1gt0yUORJbhJhVs/9c0388CSMXOhIAjUwwclz5IkwWAwKA3DXNfd2coa
      Z3jn1Q3cdUOMggh/9dl1RLUeXr90C199e4BPr7WRbl3Ap3/2c7MflC3jaFONmie6scRI6z4P
      Ms7VFYoWi0nSXiaS12UsyWqJCbIdWk4yDQBr3dJzybGstT2stafdPK2cXvKTm+/liQV7oY3P
      xTKdcEfQCJhieCbh29vbKqdrrOzkEEmWI0pzPHOyB8+d9kp6HigTboY/7D3aC8+AHaXkfo1Z
      XQems5Ekzxj2ZbBRO1qHd+kN/Oz5T8Fqt+HlOU4cX8c/OHkUG5s+jj77i2g1a9NPiaS1AnZP
      R5hVSWCPRhAEC63gEhROfdWQgrPftQcKCuNWffFJVog4fkK3LLRq+jOT50Emr3oZdF4L+Sww
      bNLHDRQTcCqbhDRgNGxcoAOAjx7vot+sGYWfkB3BOl18f788Y/XHdGSMzE3L8hBg97A0K09x
      rJnjqec+BdvdDeuPdRu4MZjAhYVe8/3HSs0bmNRIDkYnUnqAvRIukzluRmEvPC3WXkFrxcTP
      BNmfo//I6zBx26vFlnmJZVlqQU8myntRKjkm9seXvV/GM90AsK2BIemidMl7yVyQvNovXUx4
      y+aapWsTXXJ8zIFWOi2stIpe+umTPTz+aF9tjJlriuiepOvTwyEmLXsVElNnoDwxgdWMvS5S
      AeXKKiEbu0y0sey4V7du6nfntfi/fDjEYYOCRIus0wagECKycqbj6laA0aRogEyLZHILJPu+
      9sOzeZBFEckzOR6WTRft85qrAKzblj3ihr/301JsGiDjf9d1C/0oe12EWwS2baPX66n/TXVv
      U9VkHvQSpQSTO8bxe12EWxTkmWljPcc2r8X9eLeOllekvWwVWO6FYPh6L+hyXbfwdEo5fzR4
      9Xq9wNdZWCgYlVZE/g/s1vr3UtEg5NP/ABSuyfvR1e8ntlwETODkPWRSvteKBq+jhyhyHURu
      hrlX0GmR/3M32syQNc/g3roA27bw+o0h0izHW7eGcGrTdOX5bhsEz4O9l5jFM4a+83j2+vtN
      cwtxgK7FFFJ0u919W3/povmafL4VuzbvlfAD0xaEsG173+3SJo9I2oAdxTqMVux50HlGJWy/
      38M/8/6WDZz8GADg3LE2bAt44mgHyIGJxjO551i2P9xrvul0yRLvPPQaLm6/9b3FPACAwhk6
      vOmiR2qXgbVx+T/LjRSiey0kZSu3+ynnSehlU1mSvdfWn9CTUVrqvZaX3feNkG1ZsCwUwmEA
      hWcX77cStBeUJdlyHPOw0vSw1X1yMQ8ATMeQ+w0PJJhfcAl8r4w5DJisP09YOAgYBjHWP+hc
      7Qd6GZb7nw/KM270YSVtPxHAQaDTxbneS+jVqNl44mh3MQWQ7cKMIeXT5A8CJjXAvXWZZTA9
      aUQ/UHa/YHszcP9p01vRAagnNh4Utm1jZWWn6/KDwDO2ku9lLJZlwbEWzAHkxo+9PP180YE8
      SMjqEjeSPwy0Sbpo+Q8rn3rQPJMhEPd87HdMCymALOvtZbP1hwWMjQ9TsT8oyPODn+rxQYKM
      RFjJOgjPFvKHcqn7MFzoBwVypflhE35aSXmQ1cMC0rbXsMeEhaRZ1lwftJDo7cYHhV5PfpDY
      b3uECVyN/iDQBRTzyIPgsPm/kAIwdmS79H76cw4Th8lUNvzJRwo9SByWh5UbYdizcy9WZvc6
      noNC9mexmfIgPFtoVKz3s6pgygHul/AcphdiSW/WQh+wu6H+XuMwaeO6A3dymXh22NZ0Fg6T
      Nra8z+PZIlgoOOS+TaDc+t6r3o97DVnHnkXbhw2WtfMwv7JnuMnPfZjASISl0IPStXAVaF4i
      9UHID/YDeoF5n/mwgSvpsyp2H0a6AHOvlekzi+DhKelUqLAP7FkBGDd+GMOdeXiYaXtY6Tpo
      HrMnBeB+0/1uUvkggxtW7tUmlQcJHjj8oCtchw2ekmE6smVR7EkBuNvmfi4a8ViWRZjHzk55
      5OGiJVsekXKYrRDzQAYuwjzSxmcpL8pweWDV/VrEpDFZVOFYWtefRjnvO5yLe94KAeye8iz7
      9e8lOBE8BYGKx3ZbbtFM01QdvKVv/ZNPuJkFPjDtoJ2Si4IM5+OaeAIeN8yzosY5lyVm9mSl
      aaoa0mbdZzweq33W94M2ehs+hYdVNnkYAI0aj7/R+5YWUW75NMmD0LXnDTHyMT+HAb21NY5j
      uK6L0WhU6GZMkkSdSeM4jnqka9lmbrlraBbKtgweNmgVSZtcmAqCQG3/bLfb8Lydh22bzvah
      cixCGzes32vauL+Yp0zwfiae8Twm05goX/N6zbij7jBWuudKMl0NjyTnM3j3cmOpQPxbtiBI
      y8BjOuTSOYmVR4AHQVA4/Uw27O1lXEmSYDweK6vEXVt7uYa+kZ7XpbfiSux4PFZbIk07moAd
      rzUajQpnJvEae9k/TO/BEHBeqXcWbZx/rinw4GSOST7/gJ/Xx+k4DsIwLHhrE6/m0ccjXeg9
      5fH5e6ULEArA/nHTjh4ybNGQQr9ZEARqY4jsU5cTpf8tvy8FgH/zebjy86aN36SN/+vX5llG
      8rGki4IhGpWTRxDKWFvOGy2c/L4MeXi0iOnsT5O1YwhoCm/k8e00Onvp4iXPeG3mKjof9HHp
      r/Gztm0XvIP+vs67Mp6pw3KxP57JkNm27V0FIIE8mJUH5HIZvdFoqDNB5TmiZSBBzNK5dC0n
      RxIprYKcYP1zgPnBeXIC5XUo5Dy2jx6Mn5cHAUsLNg8MaeRhYPOYqTNfhmmkV3+ajpwP+Rrn
      gbximEGeyT4ZJqSLKACVinyTyktaTN7I5IXl+PVepFleWxY+eG4RT9DgNlp6lL0oAIsOstKn
      FIAX4rF61Fr9+AkZsswC47QgCArn/+hH60mBMXkA08TLh3fon5N/8x60qgwrgiBQ45AVlUXD
      J3pEPf/QaZOQIZx+L95fti1IA2Cijd/TGcoT8aSQ7kWp6dUkz8o8LOnSrbRuBCzLUmPSr1mm
      NDSa5JlUXvJsUbqA3edKy2eZ5Xm+qwA82VieXGYKd+TjeMpATZVPe9StsmlS9dBBQhceEzNM
      E5LneeE5w6RR3+RP2haZUBmCzaKtbPwm2kzXKLOYchwypwBgPJ5yXkuERFnpeD90zTJw8jVT
      uMcH8fEz8ixXiUVyG35PHpXP30oBfN9XAqBbGWn555WdGBrQipgmQtf2efGg/I4+JtNn5PWY
      MOnX0O+zyEZ4JnxcM5D3K6NNvl9Gm4m+sjmS1xiNRsZGPt2ozNvjzHli0qzfcxZdpnvq3ykz
      DmVKJZ8PMAs8hn0WGE6xbKrf3/iADIk8z9XRiPMWwOg+9QdqlIU4engjP8O/dUbIsc7yBPrv
      MuvFvvJ51j/LMlWaLfNqJtr0scwaj6StLCwrUyAdPGt/Hs8YUo7H4z3xrGwcZbSZlMVEmynv
      kSCvPM+bWY5nBDMcDgtVtynvW3qF98EnupisI609B86zPE3EEXrMTc8iwe/q1Q09d+Br8lr6
      zyxh43dNVoTJI+85HA6NLbi6YOuxr8lLkS6djjKPWEZXGRh+msqDzBtkyDQajaboKpsrfdym
      e8+KInTlNv2UjcWydtcJTOsbMnzL8xyDwUD9X2bcp54TLH+YcbOvXI8NoyjCcDhUr8vnxcqb
      SuLLYkbT32Xvy9d0gTEtbOl0AbsHyDLW1K/v+74SjLKcoUzYTZ/TBV3SOC8sMn3H9B55xmNr
      AEwdjZKmKYbDofLSOs/K5tY0NtO4TYcCz/J+Jt6Uvc7TLTzPm+rZyvNcPSyQdJeVjiUNRgXg
      37TWst4tP8OlbE6y/mgcqQhlFkR3e/pAy4TMNPnSwpS5WdN35YIaf/hsAE6iPCK9TNDLlGCe
      VdO/a/pfH5+JFvKKoQHr7vI7DAeYn/GhdvoYpfc0WX1TqGLyttLjSbpMXnSWwZPXZnVI/xx5
      luc7pXu2gOh0SRgfkCEngELOPhk+Q5grg5IgKoC8sSTaBF3ATa+bJmjWtUzCpH83SRJVYut0
      Oup/Kfy8Bg8AZs+Oabz6OKU3KqPDZOWk4dHHbBJSk6KxPs5TE7h4xPBHfr/RaBQew2ry3nL8
      s+jSP2fydKbvzzIaEuzWpSeQZU2ZmwG7x/pTJssMYiGLkOU4goLOhZQwDFGv15US9Ho9tegi
      z/M3WWPdWuiTN8uS8H39WvMmTYYG+nW54MP3JpOJOvZPPsOWq4f6s9L0+0iLyHGy/j/LYpos
      6yy65ByYStIMbfJ8ZwHJ9324rlswZvV6XS0M6Su0JkNTxjtT+DTr83oYXEZbmSzIBTquvEve
      8SQ+Vv/m5QDqIXk3b95U1k1nIn/z5DS9pswGJ50A/ftlXkDHPCboIZW8h444jqfCMpMi6U+a
      52+950gfpx5nlinvrO/M+qx+X46dHkq2UpjmnMcG6kKXZRm2t7enwkXd4pcpuv63NHbz5qPM
      0/MaJp7pY2CeIw9Q5vdZiTR9Vx/TlPkoCzcsy5pKPGjx9Z52XTjL4lv5epkAm2JHU3hgurcu
      zLpblu/RCvL6DCPkE2vmWScpkDptJote9rsMJkMi50OnizyTxQuGemz9mHdteS1JXxn0edd5
      P4su/Z58zySLtPryGmyf0NtTyugCtBBonhACUO6Hj/gxVXVMDJqHWZM0S7lMk1PmVufdh52F
      g8FA9djoffj6deZZTH7WZOl05posnX4dHYt4V71dWQrxPKUy5QVl49GNU5kxPSyesQDjOI5q
      sWZJe1G6pqpA8ku6pZbNRNQyWdcvY6Zuvfm+7jJ1N152bZ0wkyCVWY6yH8aSQRAoi6mXfU2M
      KnPnZfNaNrYyhushiv5Z3ePpPwwpZKu5aYONiS79frPCCZ2usvk3Xc9k7efRJXnGCiWAwjqA
      Tof8n+8vtBIsCWXiaLIgs6y9/JweA5saqqilZeMqu8c8T8IxmqyyXjvWxyUV1iSMJtrk5/W5
      lLSVjZvXLMMsnsn/9SYwfkZPYk1Capozk+Is6mkXMRplRlF+z7KsQlKc57v7TvSHOpoWW6c8
      gGlQJusl+/kXFU5JlEl4ylqG9e+WXW8WM+Rrs0IOVknkNfXvLcrYWfcto63sM6YVcR1l+4T5
      mszf9mNQZoV/s6ytDvkZE89Mgl4mjwCmKnOz5MQEpQCm0ETX8lnWSneBJibr15MJ4yxrL7+r
      31P+Nn1nVni0FwUuo62M6fL3PNpM1ymzjDpt/Cw9hSl0mOUZTUInx1323Xl0yXEtcj85Zl2Z
      pQdclGfz7kMYPcC8m8xyg5yUshhXjz/1QZXFjaaxSddosiR78U46TMq/CG2zLL3+ni7Ii1rE
      smvroYLuvcu+P0uATXSVfU6nTY5r1lzw/3nGs+y78vuzPIzpXioH4DnypnhrL9C/XybYpvfL
      QgETI4l5Zbksy1RloIy2RZWF1mlRxTroXM4blzxpoez7HMesa+5nnAehbV44eZg8m/dZpQDt
      dnvPG8I/DPB9/6Gkiw+kftgefgHcX55VZ4NWWGpUClBhqVEpQIWlRqUAFZYalQJUWGpUClBh
      qVEpQIWlRqUAFZYalQJUWGpUClBhqVEpQIWlRqUAFZYalQJUWGpUClBhqVEpQIWlRqUAFZYa
      lQJUWGpUClBhqVEpQIWlRqUAFZYalQJUWGpUClBhqVEpQIWlRqUAFZYalQJUWGpUClBhqVEp
      QIWlRqUAFZYalQJUWGpUClBhqVEpQIWlRqUAFZYalQJUWGpUClBhqVEpQIWlRqUAFZYa/x9x
      Tc2ifH8AbgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Nationality Sunk over Time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dWWxjWXrff3fjKooSKYrUVlJJtXVVL+7uaXfPjAeYBHCWcWA7mMCBEQNB
      bCQPeTGcIEjyEGBgZzOSwG8G8uAEDoIAQWI7MOwYtnvQdqa7a+1aupau0r6LFPedl3fLA1WX
      YlWNpK4qUQvPDyigzl/n3vtRun+ec8859zuS4zgOAkGPIh91AALBUaIedQACwV7s7qBIkrSv
      vvtnLd3h2T7O7vrCAIJjzcK9z/jjT27wV372Fxn0y3hpgrePL29e5Z2fuMT1u1v8jb/2LVRZ
      olEtkq0YbD2+SSV4hu9+4wqObfO/f///8N0PL3N3uQ7VLd798DvUilmGEwlhAMExR+3njUuT
      PH70kLGhPnAcFEVmIBqjz++h32dwf3aLdy+Ncv/BY0wH+gJDXH73EgCNwgbZTAnb28fggA98
      Jn7N4vrNqxhaBEk8BAuOM7n0NppHIZ2rUK41GI6GkQDMBg3Lwef1gxIgEesnvbXGdrnJcH+Q
      wZ1v98L2FrLPT8OUWFtcZDQ+gI5GbnONaGL05Q0gfCM4Dbx0F6hSqaCqogclONnsfQc7DpZt
      IwGW7aDIEo4kocgyiqLg9/u7E6VAcEjsaYBGOcvv/ennXDwTITQ0QT65jCEH+M43P+hWfALB
      obLnRJinL8LZsSEGwmGWV1bQfH0EPAr1eh3DMLoVo0BwaOzZApiNCpIk4+8bYGwsQNhjY6p9
      +P1+8RAsOBW89ChQrVYjEAi87ngEgq4i1gIJehphAEFPIwwg6GnETJbgRLK9vU0ymXTL09PT
      VKtVUqmUq83MzBAMBvc8jzCA4ETSbDap1Wpu2bKs5zTbtvc9j+gCCXoaYQBBT7OnAWzL4Nbt
      uziOzf0HD1l48pDH88tdCk0gOHz2NECzViGdK5JeW2BhfZtitUmtlMOyrAP1rwSC486eBpAV
      hWoxQ7ZqoFhNTL1C05axLEsshRCcCvYcBfIE+vk73/8+AG+8cbnjZ6ZpHl5UAkGXEA/Bgp5G
      GEDQ0wgDCHoaYQBBTyMMIOhphAEEPY0wgKCn2TctSkPX0VSZum6hKQ62pOL3eroUnkBwuOyT
      FiXD7//ZNb7z/iXuPF4iHg5gyl6+/ZFIiyI4HexpAG9flMmRCJo3QNCnIWtevJIs0qIITjTr
      6+voug7sYwBDr+L1+VBUlYnJGcJeB1MNirQoghNNPp+nWq0C+60F8of4xvvvAxAbPvzABIJu
      I0aBBD2NMICgpxEGEPQ0wgCCnkYYQNDTCAMIehphAEFPs+c8gG3ofHbjDjNjUdYLTcKaiaEE
      efPSuW7FJxAcKnu2AEazgW6YRBOjGLUSVd2mWSvRbDaxLKtbMQoEh8aeBpAkiWoxx+P793B8
      YSSrgS15UBTlue3pBYKTyL5pUX7u5372hT+TZfH4IDj5iLtY0NMIAwh6GmEAQU8jDCDoaYQB
      BD2NMICgpxEGEPQ0exvAcSiVSjiOTalcoVrKUyzX9jxEIDhJ7DkRVi9l+OOPr/Pd92a4t1Jg
      0Ae2pPDND3+yW/EJBIfKni2ALxRlIj7A8PhZQl4ZSZJRZJEWRXB62DctSn84TDqTJxweZCQW
      wlICIi2K4MSQTqfJZrNAa23bxYsXO36+b1qUt996C4DEyMghhSgQHB71ep1CoQC8eP2aGAUS
      9DTCAIKeRhhA0NMIAwh6GmEAQU8jDCDoaYQBBD3NnvMAVrPGD390k0uTcVYyVSJ+aMpB3n3r
      UrfiEwgOlT1bAMu08Xg1MqUaA16oWjKOUafRaIilEIJTwT5dIJtaqYjPo1HQwS+ZSJofr9eL
      qu69v55AcBLYNy3K9773N1/4M5EXSHAYvGiN2WHea+JrXHCsSCaTrKysuOWLFy8yODh4aNcT
      o0CCnkYYQNDTCAMIehphAEFPIwwg6GmEAQQ9zYGGQTObq2wUdMIek6Yc5ML0mcOOSyDYBwkH
      qaP8MnQYwHEcvvj8E6TwGd5/s70N0ubWFo+WNrk4PQXUse1x8VK84EipECa56/Y9hw8ofu3z
      PNMCODRqFWp254nC/SEi0RhGvYSlhjAMQ2yRJDgVPNcF0i2JoE/p0CbPX2byfGc9YQBBt0in
      0ySTSbc8NTXFi7o8NUJkGHXLBp59z91pAAeKxQKWb+ilgxUIXjeGYVCtVt1y68v3+cdXGxUD
      r1t2DvBc0DkKJEHQI5Er118+WoHgBNFho3KxQGxsGq2pHVU8AkFX6WgBVmYfcPXGbRqGeVTx
      CARdpaMFGB4/y08PJFC9waOKRyDoKh0GiI9OED+qSASCI6CjC+Q4Dl/evsmd+4+OKh6BoKs8
      NxHWNAxymXXWYzHGEzEAbMukadqoMtjIeDTxIpng1clkMmxubrrlycnJrsfQcSfncnlkCRqm
      5N78AA/v3GQxUyUe8mDKfn7qmx90PVDB6cM0TWq19pZbRzG52mGASGSQamWU/mjnOh/DslFl
      CdUbQJMksUOM4NTQYYBCNs2NG9eZvvh2R6XpmRm8uRqDPjDVPrFDjODU0GEAw2jyzjs/gSV7
      OyoNDCUYEKsjBKeQDgPMPnlCqWGhKBqXzk0dUUgCQffoMMB773+AgYyhi5lgQW/QYQB/Xz8+
      x0EOiTclBb1BhwG+vH2dtWSWcxeviC6QoCfoMMDb735AYH6eoVj0qOIRCLrKM30diaWFea7f
      vHU00QgEXaajBZAkiQ8//BBb9R1VPCcKy7JYXl52y319fcTjYjnhSaJzUY8kEY48P+Cf297k
      6p1HjEaCNOUgH77/9nN1ehHbtkmn0x1lYYDjj06ApwswOgygN2osraxRrlT54P33XH0gEiEW
      jeLIoGGKpRCCQ8NEo0afW7YOIYN/mQGKO9fofCWykGNzY5Opcxc6DqgVc0yeu0RxcxZTDYml
      EIJDQ8dPkfZCTPMAmR32wkHG3LnNlRckQuwwQDQ+ivTgAY1Go6NSX3SUPiA+8M4rBSMQdJsK
      YdK03nFXXvDz5yzhmAbbmfxhxyUQHAueGwYdGZ+gkMscTTQCQZd57gnD6/Hy7rvvHkUsgleg
      Xq+zsbHhliORCJFI5AgjOhk8kxnOYX5hEVtLMTkmhvNOEqZpksm0W26v14vP5+t45fAoTVEs
      FjuGjBOJxJHE8SwdBlhbmuPNd99lbf10doEcx+n4I2iaduAdCG3bfu4GCwQCrz3G14lhGB0x
      +3y+IzNAo9HoiOUwd378OnQYIJPLIZdqNPTmUcVz6CwuLrr/7+/v/1oG2H1sJBLh7Nmzrz0+
      QXfpMMC73/gI0zBQtd5Ojeg4TsdQsKIoyLJYIn4aeW4tkOZ5fuKhkk+zmW/Q77FoygHOjA53
      LcCjwLZt7t2755YHBweZmZk5wogEh8WB5pkf3L9PUwtR0lrppk+7AQS9w4EM4PP7yRUrePwK
      thIQa4F6gHw+3/HMMzExwfDw6fviO5AB3n7vAy40TTQZbEnF61HFWqBTjuM4HV9ytm0fYTSH
      x4EMICsqAf/hp0NMp9NudjBVVRkaErlYBIfLsUryubq66n7r+P1+YQAB0Nrrq0rILb/OJdLH
      ygACwYvQ8VOi/WVoogGv5xlUDG4LehphAEFPc+y7QHfu3ME0W5nqAoEAV65cOeKIBKeJY28A
      y7LckSGxObfgdfNKBlheXkbXdaC1XubcuXOvJShBb6ATIEd7cq2Jd4/ar48/fLDObKoMHNAA
      d25exT84Qjm9RlMO8u0PWxkjSqWSu8OHqh77xkTwitTrdQqFglsOh8OvtCTcQkWnvSOpjQIc
      fiu/kC3zMFkEDmiAUF+QpfV1ov19+HHEUogddMvhj+bqbvlt0+D8+efrmabJ9va2Ww4EAgwM
      DHQjxNdKrVZjZWXFLZ89e/bYvxOxHwcyQDg8wJDlIeyxxQ4xu2iYDv/9YXuPq59VdX7hBfVM
      02R1ddUtx2KxAxvAsizq9bbJNE3D632+q2Aj0dyVQsQ+/o93x4ID/ZZio2eIjR52KIIX0Wg0
      ePDggVseGRlhfHz8OVNUTZU7+bapPFEvA/1dDfVEIr4mTiD1er3DFKOjo2zbffzWX37lar+q
      nueNYfFe934cmQHu3r1Ls9l69dLr9fLOOyLpVq1W67ix4/G4WA91yByZAWzbdpfYnoSltg3T
      4d99XnLL37rg51cOoVu4+3chnrMOH9EFOiCWA/e22yNfo8NiH7XTgFgLJOhpRAvwAiwb/uBJ
      e3jz8kSAnz9zhAEJDo2eN4DjOJTLZbesqiqoHv7nV+1hxp+myc9/8yiiOzrKTZvH2XaXbyBh
      EzuF2XIOZoCdlIke2cJQgsxMjh1yWN3DcRwePXrklgcGBjgzLdY0Pc6a/OBH7Yf+Xx9s8jMX
      u7NWp5sc6Bkgt7XM3SdLZPIVCpnUIYckEHSPA7UA+XINxdSp14o4WkisBRIcOR/PbvGf/mzW
      Lf+P2EcMeL5+C3UgA8xcvML0hctuWZIkMUYtOFKcnX+vyoEfgiVJeg2XEwgOjxurGf7b1fai
      w/MT7yDt08t/pVGgP19qsJlrDRcGfRrf+AYkk0m3e6QoCqOjYhXdacFAo8zArvLxeijO1Zos
      ZNojeg3Dwr9PUuNXMsDHyzpfbbWGCwcDJr8OpFIpd6Wipmk9ZwDbtjuGVTVNO7LM0lXD4UG6
      /azmi9qMv8L5TDxUaKeTN77GDo42Kjq+XeUXbVn3+slWdebSrdEsVZGAzgWCPT8P8LoxTZOv
      vmqvyhwaGmJ8/GC3nW453N91wzp9FrHYHgfsw0rR4l9/1h7K/KdBnZ94wQs73aCBnxwjbrll
      hsNfA3ZtJcNvf7YAgE+T+Sff6xziFgY4RqRrNv9m1w37D4jw9gv24HAcsGynoyx4OYQBuoS5
      64a1X/GGXSiY/L0/zLnlf/zdQf7qpb49jtgbx3E6RvV+3ICH4ziYu1ervvQVfzy2wzPXOFx3
      CwN0gXTN5pd23bB/94Mgv3mMJpsLhQJPnjxxy5OTk8DzJri3meef/eEdt/xv//ZbTMdf7yKp
      Hy2m+I0/anch/0vkG4z3v7y59+NABnAcG9t2kCRwkFDEdkGCU8KBDLC2MMvduTWG+z0YcoDv
      fPODw45L0AMs5yr80cN1tzw50v1h1QMZIBCOEvBsoPlCaPC1l0Jsbm666Q0VRWFs7PQsphO8
      POuFGj+cS7rlX/io+/fFgQygYjI8Nsmg13mptCjb29vurosej0cY4GtQNxzuJNvb1jp9Fv7w
      EQZ0yjiQAQZiIwy8wnj0cWL3zTRumVw6wlgOQqpm8ZvX2hNr/0jT+d7bRxjQAdB13c0YCBAM
      BveofbT03CjQ7pvp2+e8/EyPvejSDYrFYscGe62cscczg5wYzhH0NCeyBXj48KGbPsTv94us
      1IKX5kQaoFarHdu9Aoq6zb/4pJ1B+a+/FeSXvnWEAR0Tvtws8B8/aU+2/Ub44Bud3FzN8tuf
      LLjl34q/viRqJ9IAxxnLhuVi25yZ2vE0arepNk02iu0H45px8LxKZd3oOFY3Xt/vtOcNYDvw
      u/erbvnKhI9fnj7CgARd5bUb4H7aIFdq7RoT9MH7r/sCrxnbgT9ZaLjlutrkl48wHkF3OZAB
      0hvLrOV1BjwmTTnIpXNTP7bu735ZZW67AsBwyOBXvvfiejXDod5sPchasljP2y1s2+54flIU
      BdNu5QF6imE5vGgx3GnkQAbwhyM0Vh5S8PkAHcuaeOWEtv/8kyIbhdabY5PRAH/5ky+uVzUc
      msbOtTRhlFelVCrx+PFjt3zmzBkelxT+4f/Nu9q/+lsjjA/6jyK8rnMgA2wuPEJXgmh6EVMN
      YVlW1zI6/9rHBXLV1uztGwmTPznufSrBieJABrjwzkdceEZ7urhNIDjJdGUU6N9fLbG+kz0i
      Hvbxe+9146qCo6JBkDTtBY/j+IHajz/gCOmKAZIVi/Vy68HLUbq3GcbS0pL7f5/PRyKR6Nq1
      jysbZYvfuVdxy9/3GXh8L5+hoVKpkE6n3fLQ0BAOKuaujBHOMV5xc6rnAba3t91l26FQSBgA
      yNZt/nxJd8vvXzK54NvjgH2o1+ukUu18scFgkOWcxP+6295OdTh6fCdWTrUBjjOWZZHPt0de
      fL5XuAuPGduVBp8vt1uFX6gc3/c/jpUBirqDvjMebcjHf9+wV6HZbDI/P++W4/E4BMSGeN3m
      WBngX/5FgdTOLPK5YYOPf8zcgOD40LQhV29/WY2fsKVPx8oAgpPHjc0mv/an7a7cfwjpe9Q+
      fhw4LYquG0hY2JKK33vwnJCCF5Ou2fzqn7dvnO+/H+LnxSRf1zmQAZLLT7i7XCDitTBlL9/+
      6PilRbl37547Ox0MBrlw4dmpu+OFaTukqu2uQ6kplnkcBQcaoI1PTBP2K8iaF68qH8sdYnRd
      d/893YFeINiPA7UA5WIBny/ASCyEpQS/dloUgeC4ciADhKNx3ovG96/YJT5b19F33ihKDGq8
      9daL6/2/VR3baXUzJmI+Ll9+cT1B73IiR4F+516VcqNlgLfGVP7+T7+43n++U3GzMn941ssv
      frdLAQpODMd3kYZA0AWEAQQ9zYnsAr2IX/u4QH0nW8A74w7/9c0jDkhwIjg1BsjWLRo7r04W
      9dO9jkjw+vhaXaDZR/d48Hhh/4oCwQnha7QANpWGDRQPLRiBoNt8jRZAQrLqWJJ2eNEIBF3m
      a7QAEu9+0Epy2Ww2MQyDeFChHG4ZIuzX0HWdeJ9CXW9p0aCKrusk+lRMs6XF+1raSEhFclpa
      4qnWp6FJrf57PKig6zqjIZWA2hrLH96pN9avUfG28tYM79Qb7/fQMFsPwbHAjhbW3HmAoYBC
      s9lkPNw28JBfxjA6tahfxnimXsQvYz5TL+KTsQyjQxv0SVhmZ70Br4xtddYLeyUcy+zUPDyn
      hTTgGa3PA7L9jKaB5FgdWlBzUJzOekEVVDrrBRQHFbtD8ys22jP1fIqDR7Kf0Wy8ktSheXfe
      49iteSQbW7af03yK06FpWPif0VRsAs9oChZBtfMaimMS1DrryY5Fn9au51NldF0nFlBcTXJe
      Yk2DZVnUajX8fj9NXUdWVFRVoV6vu8skHMdBluV9NWhty/lUs20bSZJeWnu6K/tTzbIsFEV5
      LZrP66Faq+MPBFFk6VCucZia4zjouo7P53M127ZpNpvPaYZh4PV63RQ4sixjWRYej8etZ5om
      juOgaZqrPV0j9qwmSRKqqrpas9lEURQURXE1XdfRNM29lqIoNBoNPB5Ph1av1/H5fEiS1KH5
      /X73/txPe3o/Kj/4wQ9+8HUNIMsyiqIw//Aud+7cZnZ5i8lz5/FpCpV8mrt3v6RYN4jHh1EV
      hXJumzv37lNumMSHY6iKQimb4u69+1R2abntTeaXlsnmKyR2js2mNlhYXiFXqLrnyyTXWVha
      IV+qkRiOoSgK6a01FpdXye3StjdXWVpZI19uEI8NoSgKqY0VllbWKFR0EsNRFEUhub7E8uo6
      xWqTeKylba0tsry6QalmEI9FUBSFm9c+w3IkHj1ZYObsJIqisLEyz8raJhXdYjg6iKIorC/N
      sbq+SbVpE9vR1hZnWd1IUjcchiIDKIpCrVpG15tsJlPEhlrXrVXK6M0mW8lthvbQqpUSetNg
      K7XNUHRHK7e0ZCrNULQVc6VcotlsktzOEI10aqntLNHos1qOaHQQGZtPfvgx+WKR5fU001MT
      KLJMuVSiaehsp/NEI4PPaAWi0We0TKFVT3J48tUjVH+QerVGKNSHIjk8fvQQLRiiVqnR3x9C
      kRy+evgQb18/tUrV1R49eICvP0y1/FSzeXj/IYHwwI7Wh4zFg/sPdrR6S3NMHjx4SCDcT63a
      IBQKUivlmF/ewK+9wkSYqqokRuJowQixoQh+paVtb6domialXIamtaOlUhiWSTGbxrB3axaF
      bBpzR8uk0yiKSjGXwXQ6tXwug71bU1Vy2baW3qU5PNUyqKpKNpN2Y36qZTq07IG0xPAQ62ur
      BPr62/UyWTcmV8v+OE1xMyioqsrDOzdYWtsik8272v3b11leT5LJtbV7t66yspEiu0u7e+Nz
      1jZTZHMFV7t94zPWt7bJ5luaoih8ce1TNpIZcvkikiShKDK3rn3KZmqXJkvcvPopm6k0ucKO
      pnmYmZlmZGSUs1OTyLKMJDncuPopye0M+WKppWFz/fOWVnA1i6uff0oqnaFQrCDLMrbZoKQ7
      JJces7iWarU0Ro2yIbO58JCljXRL06tUTIX1ufusbGZaLUSjTM32sPLkLqvJXKslqZeo42Xp
      0W3WUnlUVcWsFdClAAsPvmAjXUBVVZrVPE0lwNyXt9jKlFp/i1SSUH8fn3/6o1ebCV5dWcPf
      10ezlKW2kyfL6/Fi2Q6yJCHvpJf0er3YloMkyzzdhNzj9WJbdoemKbCZ3KZYqbmBqbLDVipN
      uVJzs1Uqkk0ylaFcrbnHKlgktzNUqrvqOQbJdJbKrv2qZLtJMp2lWqu7mmS3viFrjV1vM1k6
      ye1t6np72XetUiabzVKqtM/nGA1SySQNc9dO8M06qeQmuiXtOl2d1NYGTbudgsRxoJhex5R9
      uzSHQmoFU2lvKeQA+a0lLE+oQ8tuLuJ4wx3HZtbnwDfY/hw4pNdmkfyR9oGOQ3JlFjkY2XU2
      2FqeRevb0WyblcU5/uKHf0rtacw7Xda1xVl8/dEdyQYJVhdmCQy03ml2bBsJWJ6fpW+wVU+S
      FHLJVdY2txlO7CyslFQymyusbmZIPNVklfTmMqtbGRIjbS21vsjaVo5RV9NIri2wlswzPjrs
      alurc2xsFxkbbW1qJykeNpfn2MqUGUm0YvF6VB5/9QRLCbxcF+gpHlVia2sLTyjK1MQIsgSN
      Wpno6BkwmsTicRQJ6tUSQ+NTOE2d2HAcWYJapUT8zFksXWc4PowswWA0hlmvEByIMRZv/TIH
      o8M0ayVCkWFGhlsfIDIUp1EtEo7GScRaWjQWp14uMDCUIB5r/RGjwwlqpQKRWILhoZY2NJyg
      WswRjY8Si7ZulKF4gkoxRywxzlCkdUPF4gnK+Syx0TMMDba+8ZtNnUajyXBi1L3GcDxBMZch
      MXGWSLhvRxuhmE0zMjnDYH9rg7h4IkEhu83o1HkGQ61+6XAiQW47xdj0BQb6fG697HaS8elL
      hINeV0untjhz7jL9gdbbeIlEgu3kJpPn36TfvzOYMJJge2uTqYtvE/IpSBKMjCRIbW0yfelt
      +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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      3tAVmQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Deaths Across Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fate Accross Type' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
