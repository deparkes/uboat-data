<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0204.1543                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='uboat-data+ (uboat-data)' inline='true' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\Kaden\Documents\GitHub\uboat-data\data\uboat-data.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[uboat-attacks].[ship_id]' />
              <expression op='[uboat-targets].[ship_id]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[uboat-data].[id]' />
                <expression op='[uboat-attacks].[uboat_id]' />
              </expression>
            </clause>
            <relation name='uboat-data' table='[&apos;uboat-data$&apos;]' type='table'>
              <columns gridOrigin='A1:O1154:no:A1:O1154:0' header='yes' outcome='6'>
                <column datatype='integer' name='id' ordinal='0' />
                <column datatype='string' name='name' ordinal='1' />
                <column datatype='string' name='type' ordinal='2' />
                <column datatype='date' name='ordered' ordinal='3' />
                <column datatype='date' name='laid_down' ordinal='4' />
                <column datatype='date' name='commissioned' ordinal='5' />
                <column datatype='date' name='launched' ordinal='6' />
                <column datatype='date' name='fate' ordinal='7' />
                <column datatype='string' name='fate_type' ordinal='8' />
                <column datatype='integer' name='fate_survivors' ordinal='9' />
                <column datatype='real' name='fate_lat' ordinal='10' />
                <column datatype='real' name='fat_lon' ordinal='11' />
                <column datatype='integer' name='fate_dead' ordinal='12' />
                <column datatype='string' name='shipyard' ordinal='13' />
                <column datatype='integer' name='ships_sunk' ordinal='14' />
              </columns>
            </relation>
            <relation name='uboat-attacks' table='[&apos;uboat-attacks$&apos;]' type='table'>
              <columns gridOrigin='A1:F3470:no:A1:F3470:0' header='yes' outcome='6'>
                <column datatype='integer' name='ship_id' ordinal='0' />
                <column datatype='date' name='attack_date' ordinal='1' />
                <column datatype='string' name='loss_type' ordinal='2' />
                <column datatype='string' name='uboat_name' ordinal='3' />
                <column datatype='integer' name='uboat_id' ordinal='4' />
                <column datatype='string' name='uboat_commander' ordinal='5' />
              </columns>
            </relation>
          </relation>
          <relation name='uboat-targets' table='[&apos;uboat-targets$&apos;]' type='table'>
            <columns gridOrigin='A1:L3332:no:A1:L3332:0' header='yes' outcome='2'>
              <column datatype='integer' name='ship_id' ordinal='0' />
              <column datatype='string' name='ship_name' ordinal='1' />
              <column datatype='string' name='nationality' ordinal='2' />
              <column datatype='integer' name='tonnage' ordinal='3' />
              <column datatype='integer' name='complement' ordinal='4' />
              <column datatype='integer' name='survivors' ordinal='5' />
              <column datatype='integer' name='dead' ordinal='6' />
              <column datatype='date' name='attack_date' ordinal='7' />
              <column datatype='string' name='attack_lat' ordinal='8' />
              <column datatype='string' name='attack_lon' ordinal='9' />
              <column datatype='real' name='attack_lat2' ordinal='10' />
              <column datatype='real' name='attack_lon2' ordinal='11' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[attack_date (uboat-targets)]' value='[uboat-targets].[attack_date]' />
          <map key='[attack_date]' value='[uboat-attacks].[attack_date]' />
          <map key='[attack_lat2]' value='[uboat-targets].[attack_lat2]' />
          <map key='[attack_lat]' value='[uboat-targets].[attack_lat]' />
          <map key='[attack_lon2]' value='[uboat-targets].[attack_lon2]' />
          <map key='[attack_lon]' value='[uboat-targets].[attack_lon]' />
          <map key='[commissioned]' value='[uboat-data].[commissioned]' />
          <map key='[complement]' value='[uboat-targets].[complement]' />
          <map key='[dead]' value='[uboat-targets].[dead]' />
          <map key='[fat_lon]' value='[uboat-data].[fat_lon]' />
          <map key='[fate]' value='[uboat-data].[fate]' />
          <map key='[fate_dead]' value='[uboat-data].[fate_dead]' />
          <map key='[fate_lat]' value='[uboat-data].[fate_lat]' />
          <map key='[fate_survivors]' value='[uboat-data].[fate_survivors]' />
          <map key='[fate_type]' value='[uboat-data].[fate_type]' />
          <map key='[id]' value='[uboat-data].[id]' />
          <map key='[laid_down]' value='[uboat-data].[laid_down]' />
          <map key='[launched]' value='[uboat-data].[launched]' />
          <map key='[loss_type]' value='[uboat-attacks].[loss_type]' />
          <map key='[name]' value='[uboat-data].[name]' />
          <map key='[nationality]' value='[uboat-targets].[nationality]' />
          <map key='[ordered]' value='[uboat-data].[ordered]' />
          <map key='[ship_id (uboat-targets)]' value='[uboat-targets].[ship_id]' />
          <map key='[ship_id]' value='[uboat-attacks].[ship_id]' />
          <map key='[ship_name]' value='[uboat-targets].[ship_name]' />
          <map key='[ships_sunk]' value='[uboat-data].[ships_sunk]' />
          <map key='[shipyard]' value='[uboat-data].[shipyard]' />
          <map key='[survivors]' value='[uboat-targets].[survivors]' />
          <map key='[tonnage (uboat-targets)]' value='[uboat-targets].[tonnage]' />
          <map key='[type]' value='[uboat-data].[type]' />
          <map key='[uboat_commander]' value='[uboat-attacks].[uboat_commander]' />
          <map key='[uboat_id]' value='[uboat-attacks].[uboat_id]' />
          <map key='[uboat_name]' value='[uboat-attacks].[uboat_name]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ordered</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ordered]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>ordered</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>laid_down</remote-name>
            <remote-type>7</remote-type>
            <local-name>[laid_down]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>laid_down</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>commissioned</remote-name>
            <remote-type>7</remote-type>
            <local-name>[commissioned]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>commissioned</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>launched</remote-name>
            <remote-type>7</remote-type>
            <local-name>[launched]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>launched</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[fate]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fate_type]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_survivors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fate_survivors]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_survivors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fate_lat]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_lat</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fat_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fat_lon]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fat_lon</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fate_dead</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fate_dead]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>fate_dead</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipyard</remote-name>
            <remote-type>130</remote-type>
            <local-name>[shipyard]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>shipyard</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ships_sunk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ships_sunk]</local-name>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias>ships_sunk</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uboat-data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O1154:no:A1:O1154:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ship_id]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>ship_id</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[attack_date]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>attack_date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loss_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[loss_type]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>loss_type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uboat_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[uboat_name]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>uboat_name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uboat_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[uboat_id]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>uboat_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uboat_commander</remote-name>
            <remote-type>130</remote-type>
            <local-name>[uboat_commander]</local-name>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias>uboat_commander</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uboat-attacks]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F3470:no:A1:F3470:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ship_id (uboat-targets)]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>ship_id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ship_name]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>ship_name</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nationality]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>nationality</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tonnage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tonnage (uboat-targets)]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>tonnage</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[complement]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>complement</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survivors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[survivors]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>survivors</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dead</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dead]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>dead</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[attack_date (uboat-targets)]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_date</remote-alias>
            <ordinal>28</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_lat</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attack_lat]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_lat</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_lon</remote-name>
            <remote-type>130</remote-type>
            <local-name>[attack_lon]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_lon</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_lat2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attack_lat2]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_lat2</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>attack_lon2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[attack_lon2]</local-name>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias>attack_lon2</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[uboat-targets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L3332:no:A1:L3332:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ships Sunk / Month' datatype='real' name='[Calculation_1035264973625937920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([ship_name])/COUNTD(MONTH([attack_date]))' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Attack Date (Uboat-Targets)' datatype='date' name='[attack_date (uboat-targets)]' role='dimension' type='ordinal' />
      <column caption='Attack Date' datatype='date' name='[attack_date]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[attack_lat2]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='string' default-role='measure' default-type='ordinal' name='[attack_lat]' role='dimension' semantic-role='' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[attack_lon2]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Commissioned' datatype='date' name='[commissioned]' role='dimension' type='ordinal' />
      <column caption='Complement' datatype='integer' name='[complement]' role='dimension' type='ordinal' />
      <column caption='Dead' datatype='integer' name='[dead]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[fat_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Fate' datatype='date' name='[fate]' role='dimension' type='ordinal' />
      <column caption='Fate Dead' datatype='integer' name='[fate_dead]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[fate_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Fate Survivors' datatype='integer' name='[fate_survivors]' role='measure' type='quantitative' />
      <column caption='Fate Type' datatype='string' name='[fate_type]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Laid Down' datatype='date' name='[laid_down]' role='dimension' type='ordinal' />
      <column caption='Launched' datatype='date' name='[launched]' role='dimension' type='ordinal' />
      <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
      <column caption='Ordered' datatype='date' name='[ordered]' role='dimension' type='ordinal' />
      <column caption='Ship Id (Uboat-Targets)' datatype='integer' name='[ship_id (uboat-targets)]' role='dimension' type='ordinal' />
      <column caption='Ship Id' datatype='integer' name='[ship_id]' role='dimension' type='ordinal' />
      <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
      <column caption='Ships Sunk' datatype='integer' name='[ships_sunk]' role='measure' type='quantitative' />
      <column caption='Shipyard' datatype='string' name='[shipyard]' role='dimension' type='nominal' />
      <column caption='Survivors' datatype='integer' name='[survivors]' role='dimension' type='ordinal' />
      <column caption='Tonnage (Uboat-Targets)' datatype='integer' name='[tonnage (uboat-targets)]' role='measure' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
      <column caption='Uboat Id' datatype='integer' name='[uboat_id]' role='dimension' type='ordinal' />
      <column caption='Uboat Name' datatype='string' name='[uboat_name]' role='dimension' type='nominal' />
      <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
      <column-instance column='[fate]' derivation='Year-Trunc' name='[tyr:fate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fate]' derivation='Year' name='[yr:fate:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.666667' measure-ordering='alphabetic' measure-percentage='0.333333' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:fate:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1939</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1940</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1941</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1942</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1943</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1944</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1945</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:fate:qk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1939</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1940</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1941</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1942</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1943</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1944</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1945</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:nationality:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Argentinian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Australian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Belgian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chilean&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Danish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dutch&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Egyptian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Estonian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Faroese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Finnish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Greenlandic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Honduran&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Icelandic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Latvian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Lebanese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Lithuanian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nicaraguan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Norwegian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Palestinian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Panamanian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Polish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Portuguese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Romanian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;South African&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Soviet&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Swedish&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Syrian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Uruguayan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Venezuelan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Yugoslavian&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:loss_type:nk]' type='shape'>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sunk&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Total Loss&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Damaged&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Captured&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:loss_type:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Sunk&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Total Loss&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Captured&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Damaged&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='id' />
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='ordered' />
        <field-sort-custom-order field='laid_down' />
        <field-sort-custom-order field='commissioned' />
        <field-sort-custom-order field='launched' />
        <field-sort-custom-order field='fate' />
        <field-sort-custom-order field='fate_type' />
        <field-sort-custom-order field='fate_survivors' />
        <field-sort-custom-order field='fate_lat' />
        <field-sort-custom-order field='fat_lon' />
        <field-sort-custom-order field='fate_dead' />
        <field-sort-custom-order field='shipyard' />
        <field-sort-custom-order field='ships_sunk' />
        <field-sort-custom-order field='id (uboat-target-data)' />
        <field-sort-custom-order field='name (uboat-target-data)' />
        <field-sort-custom-order field='loss_type' />
        <field-sort-custom-order field='attack_time' />
        <field-sort-custom-order field='attack_date' />
        <field-sort-custom-order field='attack_lat' />
        <field-sort-custom-order field='attack_lo' />
        <field-sort-custom-order field='nationality' />
        <field-sort-custom-order field='tonnage' />
        <field-sort-custom-order field='complement' />
        <field-sort-custom-order field='survivors' />
        <field-sort-custom-order field='dead' />
        <field-sort-custom-order field='commander' />
        <field-sort-custom-order field='ship_name' />
        <field-sort-custom-order field='Calculation_1035264973625937920' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Nationality Sunk over Time' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Nationality' />
        <param name='target' value='Nationality Sunk over Time' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Attack Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Attack Date (Uboat-Targets)' datatype='date' name='[attack_date (uboat-targets)]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[attack_lat2]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[attack_lon2]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[ship_name]' derivation='Attribute' name='[attr:ship_name:nk]' pivot='key' type='nominal' />
            <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
            <column-instance column='[attack_lat2]' derivation='None' name='[none:attack_lat2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[attack_lon2]' derivation='None' name='[none:attack_lon2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[attack_date (uboat-targets)]' derivation='Year-Trunc' name='[tyr:attack_date (uboat-targets):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lon2:qk]' field-type='quantitative' max='23819352.037748482' min='-18884895.714908715' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lat2:qk]' field-type='quantitative' max='16072582.953086752' min='-7009298.2042146754' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:attack_date (uboat-targets):qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:attack_date (uboat-targets):qk]' />
              <shape column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[attr:name:nk]' />
              <lod column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[attr:ship_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
                <format attr='mark-transparency' value='185' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lat2:qk]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:attack_lon2:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Fate Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[fat_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Fate' datatype='date' name='[fate]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[fate_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Fate Type' datatype='string' name='[fate_type]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[fat_lon]' derivation='None' name='[none:fat_lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fate_lat]' derivation='None' name='[none:fate_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fate_type]' derivation='None' name='[none:fate_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[fate]' derivation='Year-Trunc' name='[tyr:fate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]' included-values='non-null' />
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]'>
            <groupfilter function='member' level='[none:fate_type:nk]' member='&quot;Sunk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]</column>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]' field-type='quantitative' max='24179938.591406658' min='-18481615.589559808' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_lat:qk]' field-type='quantitative' max='16015036.00921884' min='-7043769.0373955797' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:fate:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:fate:qk]' />
              <tooltip column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[attr:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='has-stroke' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='mark-color' value='#6f95bf' />
                <format attr='mark-transparency' value='188' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_lat:qk]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Nationality Sunk over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Attack Date' datatype='date' name='[attack_date]' role='dimension' type='ordinal' />
            <column-instance column='[ship_name]' derivation='Count' name='[cnt:ship_name:qk]' pivot='key' type='quantitative' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[attack_date]' derivation='Month-Trunc' name='[tmn:attack_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:nationality:nk]' />
              <groupfilter function='member' level='[none:nationality:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Argentinian&quot;</bucket>
              <bucket>&quot;Australian&quot;</bucket>
              <bucket>&quot;Belgian&quot;</bucket>
              <bucket>&quot;Brazilian&quot;</bucket>
              <bucket>&quot;Canadian&quot;</bucket>
              <bucket>&quot;Chilean&quot;</bucket>
              <bucket>&quot;Chinese&quot;</bucket>
              <bucket>&quot;Colombian&quot;</bucket>
              <bucket>&quot;Cuban&quot;</bucket>
              <bucket>&quot;Danish&quot;</bucket>
              <bucket>&quot;Dominican&quot;</bucket>
              <bucket>&quot;Dutch&quot;</bucket>
              <bucket>&quot;Egyptian&quot;</bucket>
              <bucket>&quot;Estonian&quot;</bucket>
              <bucket>&quot;Faroese&quot;</bucket>
              <bucket>&quot;Finnish&quot;</bucket>
              <bucket>&quot;French&quot;</bucket>
              <bucket>&quot;German&quot;</bucket>
              <bucket>&quot;Greek&quot;</bucket>
              <bucket>&quot;Greenlandic&quot;</bucket>
              <bucket>&quot;Honduran&quot;</bucket>
              <bucket>&quot;Icelandic&quot;</bucket>
              <bucket>&quot;Indian&quot;</bucket>
              <bucket>&quot;Irish&quot;</bucket>
              <bucket>&quot;Italian&quot;</bucket>
              <bucket>&quot;Latvian&quot;</bucket>
              <bucket>&quot;Lebanese&quot;</bucket>
              <bucket>&quot;Lithuanian&quot;</bucket>
              <bucket>&quot;Mexican&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Nicaraguan&quot;</bucket>
              <bucket>&quot;Norwegian&quot;</bucket>
              <bucket>&quot;Palestinian&quot;</bucket>
              <bucket>&quot;Panamanian&quot;</bucket>
              <bucket>&quot;Polish&quot;</bucket>
              <bucket>&quot;Portuguese&quot;</bucket>
              <bucket>&quot;Romanian&quot;</bucket>
              <bucket>&quot;South African&quot;</bucket>
              <bucket>&quot;Soviet&quot;</bucket>
              <bucket>&quot;Spanish&quot;</bucket>
              <bucket>&quot;Swedish&quot;</bucket>
              <bucket>&quot;Syrian&quot;</bucket>
              <bucket>&quot;Uruguayan&quot;</bucket>
              <bucket>&quot;Venezuelan&quot;</bucket>
              <bucket>&quot;Yugoslavian&quot;</bucket>
              <bucket>&quot;American&quot;</bucket>
              <bucket>&quot;British&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='GT Pressura Mono' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tmn:attack_date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 15 Commanders'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column-instance column='[ship_name]' derivation='Count' name='[cnt:ship_name:qk]' pivot='key' type='quantitative' />
            <column caption='Dead' datatype='integer' name='[dead]' role='measure' type='quantitative' />
            <column caption='Loss Type' datatype='string' name='[loss_type]' role='dimension' type='nominal' />
            <column-instance column='[loss_type]' derivation='None' name='[none:loss_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[uboat_commander]' derivation='None' name='[none:uboat_commander:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[dead]' derivation='Sum' name='[sum:dead:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tonnage (uboat-targets)]' derivation='Sum' name='[sum:tonnage (uboat-targets):qk]' pivot='key' type='quantitative' />
            <column caption='Tonnage (Uboat-Targets)' datatype='integer' name='[tonnage (uboat-targets)]' role='measure' type='quantitative' />
            <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:loss_type:nk]' />
              <groupfilter function='member' level='[none:loss_type:nk]' member='&quot;Damaged&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Damaged&quot;</bucket>
              <bucket>&quot;Captured&quot;</bucket>
              <bucket>&quot;Total Loss&quot;</bucket>
              <bucket>&quot;Sunk&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([ship_name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:uboat_commander:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]' direction='DESC' using='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' />
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</column>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]' scope='cols' value='Kills' />
            <format attr='subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]' scope='cols' value='true' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
            <format attr='hnlabel' value='horizontal' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='GT Pressura Mono' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:tonnage (uboat-targets):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
              <text column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</rows>
        <cols>([excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk] + ([excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:tonnage (uboat-targets):qk] + [excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[sum:dead:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Top 15 Commanders (Ships Sunk/Month)'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Ships Sunk / Month' datatype='real' name='[Calculation_1035264973625937920]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([ship_name])/COUNTD(MONTH([attack_date]))' />
            </column>
            <column caption='Attack Date' datatype='date' name='[attack_date]' role='dimension' type='ordinal' />
            <column-instance column='[ship_name]' derivation='Count' name='[cnt:ship_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[uboat_commander]' derivation='None' name='[none:uboat_commander:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1035264973625937920]' derivation='User' name='[usr:Calculation_1035264973625937920:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([ship_name])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='%null%' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Adalbert Schnee&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Adolf Cornelius Piening&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Adolf Graef&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Adolf Oelrich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Albert Kneip&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Albert Lauzemis&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Albrecht Achilles&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Albrecht Brandi&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alexander Gelhaar&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alexander von Zitzewitz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alfred Eick&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alfred Manhardt von Mannstein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Alfred Schlieper&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Arend Baumann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Asmus Nicolai Clausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;August Maus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Axel-Olaf Loewe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Bernhard Müller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Bernhard Zurmühlen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Bruno Barber&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Burckhard Hackländer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Burkhard Heusinger von Waldegg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Carl Borm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Carl Emmermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Christian Reich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Claus Korth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Claus von Trotha&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Clemens Schöler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Detlev Krankenhagen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dierk Lührs&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Diether Todenhagen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Borchert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Gengelbach&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Knorr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Lohmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Sachse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich Schöneboom&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Dietrich von der Esch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Dahlhaus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Greger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Hoffmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Hüttemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Wetjen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eberhard Zimmermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;EdU-Ard Aust&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;EdU-Ard Turre&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Egon Reiner Freiherr von Schlippenbach&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Eitel-Friedrich Kentrat&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Emil Klusmeier&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Engelbert Endrass&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Harms&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Lilienfeld&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Mäder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Taschenmacher&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Topp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erich Würdemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Bauer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Cordes&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Hechler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Heydemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Kals&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Mangold&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Mengersen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Sobe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst Vogelsang&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst-August Rehwinkel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst-Günter Heinicke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst-Ludwig Balduhn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ernst-Ulrich Brüller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erwin Manchen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Erwin Rostin&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Franz Gramitzky&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Franz-Georg Reschke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fridtjof Heckel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Altmeier&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Breckwoldt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Bürgel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Deetz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Guggenberger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Markworth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Mumm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Schumann-Hindenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich Steinhoff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich von Hippel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Georg Herrle&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Hermann Praetorius&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Karl Marks&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Wilhelm Marienfeld&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Wilhelm Sons&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Friedrich-Wilhelm Wissmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Frauenheim&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Hein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Hoeckner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Meyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Parduhn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz Schneewind&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Fritz-Julius Lemp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg Hagene&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg Lassen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg Schewe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg Staats&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg-Werner Fraatz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Georg-Wilhelm Schulz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerd Kelbling&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerd Schaar&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerd Schreiber&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Bigalk&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Feiler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Groth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Matschulat&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Meyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Palmgren&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Remus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Seehausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Stoelker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Wiebe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gerhard Wysk&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gert Mannesmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gert von Mittelstaedt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gottfried Holtorf&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Götz Baur&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Götz von Hartmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Gretschel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Hessler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gunter Jahn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Kuhnke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter La Baume&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Poser&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günter Wieboldt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Dangschat&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Heinrich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Heydemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Krech&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Lorentz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Müller-Stöckheim&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Pfeffer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Prien&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Pulst&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Reeder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Rosenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Ruppelt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Günther Seibicke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gustav Poel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gustav-Adolf Janssen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Gustav-Adolf Mugler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hannes Weingärtner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hanns-Ferdinand Massmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Benker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Dunkelberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Ey&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Falke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Gilardone&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Heidtmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Hilbig&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Hildebrandt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Homann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Hornkohl&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Hunger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Ibbeken&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Jenisch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Karpf&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Lehmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Meckel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Oestermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Pauckstadt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Reimers&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Rudolf Rösing&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Senkel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans Stock&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Achim von Rosenberg-Gruszcynski&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Adolf Schweichel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Albrecht Kandler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Bernhard Michalowski&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Diedrich Freiherr von Tiesenhausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Dieter Heinicke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Dieter Mohs&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Erwin Reith&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Georg Fischer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Georg Friedrich Poske&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Georg Hess&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Georg Trox&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Gerrit von Stockhausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Gert Mahrholz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Günther Kuhlmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Günther Lange&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Günther Looff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Hartwig Trojer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Heinrich Barschkis&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Heinrich Döhler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Heinrich Giessler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Heinz Linder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Hermann Fitting&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Bertelsmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Drewitz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Ernst&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Förster&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Gutteck&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Hesse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Horrer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Schwantke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Schwarz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim Schwebcke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Joachim von Morstein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Auffermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Haupt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Hellriegel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Lauterbach-Emden&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Sthamer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Jürgen Zetzsche&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Karl Kosbadt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Ludwig Witt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Martin Scheibe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Peter Hinsch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Rutger Tillessen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Werner Kraus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Werner Neumann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Werner Offermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hans-Wilhelm von Dresky&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hanskurt von Bremen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harald Gelhaus&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harald Grosse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harald Jeppener-Haltenhoff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harald Jürst&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hardo Rodler von Roithberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harro Schacht&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Harro von Klot-Heydenfeldt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hartmut Graf von Matuschka, Freiherr von Toppolczan und Spaetgen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hartwig Looks&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heimar Wedemeyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heino Bohmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Bleichrodt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Brodda&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Bruns&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Driver&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Göllnitz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Hasenschar&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Heinsohn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Lehmann-Willenbrock&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Liebe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Müller-Edzards&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Niemeyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Schäfer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Schmid&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Schonder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Schuch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Timm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich von Holleben&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich Zimmermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinrich-Andreas Schroeteler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Beduhn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Bielfeld&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Blischke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Buchholz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Buhse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Eckelmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Geissler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Hirsacker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Kummetat&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Scheringer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Schomburg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Sieder&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Stein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Sternberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz von Reiche&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz Walkerling&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Eberhard Müller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Ehlert Clausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Joachim Neumann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Otto Schultze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Heinz-Wilhelm Eck&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Bork&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Fiehn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Friedrich Witte&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Frömsdorf&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Köppe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Manseck&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Möhlmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Rosenbaum&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Schmoeckel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmut Vogler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmuth Christiansen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmuth Pich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmuth Ringelmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Helmuth Wehrkamp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Brünning&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Engel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Juli&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Kuppisch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Meyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Opitz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Schneider&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Schultze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Sickel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Sohler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Uhlig&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Wohlfarth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert Zoller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Herbert-Viktor Schütze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Eckhardt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Hesse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Kottmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Rasch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hermann Stuckmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hilmar Siemon&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hinrich-Oscar Bernbeck&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Deckert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Degen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Dieterichs&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Hamm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Hepp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Höltring&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Kremser&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Schünemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Uphoff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst von Schroeter&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Wellner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst Wilhelm Kessler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst-Arno Fenski&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Horst-Tessen von Kameke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hubert Nordheimer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hubertus Korndörfer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hubertus Purkhold&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Hugo Förster&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Berger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Brünner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Deecke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Franze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Matz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Preuss&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Schepke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Joachim Zander&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johann Jebsen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johann Mohr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johann-Otto Krieg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johannes Franz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johannes Habekost&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johannes Liebe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Johannes Meermeier&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Josef Röther&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jost Metzler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Könenkamp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Krüger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Kuhlmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Nissen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Oesten&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen von Rosenstiel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Jürgen Wattenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kai Lerchen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Brandenburg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Daublebsky von Eichhain&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Fleige&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Grafen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Hause&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Neitzel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Nielsen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl Thurmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Ernst Schroeter&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Franz Heine&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Friedrich Merten&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinrich Jenisch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinz Herbschleb&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinz Lange&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinz Moehle&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Heinz Wendt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Hermann Schneidewind&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Horst Horn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Jürg Wächter&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Otto Schultz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Karl-Wilhelm Pancke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Andersen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Ewerth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Hänert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Hartmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Heinrich Bargsten&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Hornbostel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Petersen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Popp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Rudloff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus Scholtz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klaus-Helmuth Becker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Klemens Schamong&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Konstantin von Puttkamer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Baberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Diggins&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Dobratz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Freiwald&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Lange&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Makowski&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Neide&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Nölke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Petersen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Reichenbach-Klinke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt Sturm&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt von Gossler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Kurt-EdU-Ard Engelmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Leonhard Klingspor&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ludwig Forster&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ludwig Mathes&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Manfred Kinzel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Martin Landt-Hayen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max Dobbert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max Kruschka&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max Wintermeyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max-Hermann Bauer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max-Martin Schulte&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Max-Martin Teichert&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Odo Loewe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Oskar Curio&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Oskar Herwartz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Oskar Staudinger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Oskar-Heinz Kusch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Fechner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Ferro&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Harms&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Hartmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Ites&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Kretschmer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Luther&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Salman&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Schuhart&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Stoeffler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto von Bülow&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Otto Westphalen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ottoheinrich Junker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ottokar Arnold Paulssen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul Büchel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul Hartwig&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul Just&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul Siegmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul-Friedrich Otto&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul-Hugo Kettner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Paul-Karl Loeser&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter Gerlach&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter Lohmeyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter Zschech&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter-Erich Cremer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Peter-Ottmar Grau&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Philipp Schüler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ralf von Jessen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ralf-Reimar Wolfram&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ralph Kapitzky&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reiner Dierksen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reinhard Hardegen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reinhard Suhren&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reinhard von Hymmen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Reinhart Reche&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Richard Becker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Richard von Harpe&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Richard Zapp&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Robert Bartels&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Robert Gysae&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Robert Schetelig&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Borchers&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Dau&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Manke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Mützelburg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Nollmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Rüggeberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Struckmeier&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf Thomsen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf-Birger Wahlen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rolf-Heinrich Hopman&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Arendt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Bahr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Baltz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Franzius&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Friedrich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Heinz Franke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Hinz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Meyer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Premauer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rudolf Schendel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Rupprecht Stock&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Freiherr von Forstner&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Hesemann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Keller&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Kietz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Koitschka&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Lüdden&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Rollmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Siegfried Strelow&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Sigurd Seeger&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Theodor Fahr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Udo Behrens&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Udo Heilmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Borcherdt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Folkers&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Gräf&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Graf von Soden-Fraunhofen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Heyse&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Pietsch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Ulrich Thilo&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Unno von Fischel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Victor Oehrn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Victor Vogel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Victor-Wilhelm Nonn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Viktor Schütze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Volker Simmermacher&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Waldemar Mehl&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Burmeister&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Dankleff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Flachsenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Freiherr von Freyberg-Eisenberg-Allmendingen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Göing&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Kell&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter Schug&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walter von Steinaecker&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walther Huth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Walther Kölle&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Czygan&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Hartenstein&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Hartmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Heidel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Henke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Krüer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Lott&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Musenberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Pfeifer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Pietzsch&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Riecken&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Schulte&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Schwaff&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner von Schmidt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Weber&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Winkler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Winter&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner Witte&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Werner-Karl Schmidt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilfried Prellberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilfried Reichmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Ambrosius&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Brauel&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Dommes&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Franken&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Fröhlich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Kleinschmidt&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Müller-Arnecke&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Rollmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Schulze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Spahr&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm von Mässenhausen&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm von Trotha&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wilhelm Zahn&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Willi Dietrich&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Willy Ohlenburg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolf Henne&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolf Jeschonnek&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolf-Harro Stiebler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Boehmer&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Hermann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Herwartz&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Kaufmann&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Leimkühler&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Ley&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Lüth&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Riekeberg&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Schultze&quot;' />
                  <groupfilter function='member' level='[none:uboat_commander:nk]' member='&quot;Wolfgang Sträter&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]' direction='DESC' using='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[usr:Calculation_1035264973625937920:qk]' />
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='cols' value='Ships Sunk' />
            <format attr='subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='cols' value='true' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
            <format attr='hnlabel' value='horizontal' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='GT Pressura Mono' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' x-axis-name='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[usr:Calculation_1035264973625937920:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[usr:Calculation_1035264973625937920:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</rows>
        <cols>([excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk] + [excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[usr:Calculation_1035264973625937920:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Top 15 Commanders (Success across time)'>
      <table>
        <view>
          <datasources>
            <datasource caption='uboat-data+ (uboat-data)' name='excel-direct.13iva2w1g8cjxg1fupadr1iiddot' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.13iva2w1g8cjxg1fupadr1iiddot'>
            <column caption='Attack Date' datatype='date' name='[attack_date]' role='dimension' type='ordinal' />
            <column-instance column='[ship_name]' derivation='Count' name='[cnt:ship_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[uboat_commander]' derivation='None' name='[none:uboat_commander:nk]' pivot='key' type='nominal' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[attack_date]' derivation='Quarter-Trunc' name='[tqr:attack_date:qk]' pivot='key' type='quantitative' />
            <column caption='Uboat Commander' datatype='string' name='[uboat_commander]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([ship_name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:uboat_commander:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='true' />
            <format attr='hnlabel' value='horizontal' />
            <format attr='title' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='rows' value='Ships Sunk' />
            <format attr='subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' scope='rows' value='true' />
            <format attr='width' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' value='10' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]' value='132' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' num-steps='5' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='GT Pressura Mono' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' />
              <text column='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#6f95bf' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='529' />
                <format attr='maxwidth' value='529' />
                <format attr='minheight' value='100' />
                <format attr='maxheight' value='100' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk] * [excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk])</rows>
        <cols>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tqr:attack_date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Map'>
      <style />
      <size maxheight='300' maxwidth='400' minheight='300' minwidth='400' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99000' x='0' y='0'>
              <zone h='100000' id='1' name='Fate Map' show-title='true' w='99000' x='0' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Top 15 Commanders (Success across time) Dashboard'>
      <style />
      <size maxheight='700' maxwidth='480' minheight='700' minwidth='480' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' name='Top 15 Commanders (Success across time)' show-title='true' w='100000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='28'>
    <window class='worksheet' name='Top 15 Commanders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:Calculation_837106586779148289:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:commander:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 15 Commanders (Ships Sunk/Month)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:Calculation_1035264973632987138:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:Calculation_837106586779148289:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:commander:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 15 Commanders (Success across time)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[cnt:ship_name:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:Calculation_837106586779148289:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:commander:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:uboat_commander:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:attack_date (uboat-targets):ok]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:attack_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Fate Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:fate:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:fate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Attack Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:attack_date (uboat-targets):qk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fat_lon:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_lat:qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:fate_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:loss_type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:type:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[tyr:attack_date (uboat-targets):qk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:fate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Nationality Sunk over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:nationality:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[none:ship_name:nk]</field>
            <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:attack_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Map'>
      <viewpoints>
        <viewpoint name='Fate Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.13iva2w1g8cjxg1fupadr1iiddot].[yr:fate:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' maximized='true' name='Top 15 Commanders (Success across time) Dashboard'>
      <viewpoints>
        <viewpoint name='Top 15 Commanders (Success across time)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Top 15 Commanders' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 15 Commanders (Ships Sunk/Month)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 15 Commanders (Success across time)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fate Map' width='192'>
      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
      5zgZ/H9MT0/ydiQxtQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Attack Map' width='192'>
      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
      xhT/Pz5t/JzoJoV6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Nationality Sunk over Time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dWWxcWXrff3ervYpbVZGiuEmipJa61T0zPTPeYMAJ4ixjxxjDyARBDASx
      kTzkxXCCIMlDgIGdzUgCvxnIgxM4CAIEQRBkMMkg9hjjmYln6dbaosRFpLiTxdr3qlt3y8Mt
      3mJJHIpaWFzq/IBG6/x5qupj8f7vOffc735HchzHQSDoU+TTDkAgOE3U0w5AIDiKgxMUSZJe
      qR/8mas7vDjHOdhfGEBwpll58gl/+v27/Pwv/Q0GNPDLLRwtwvy9u9z+3E0ePNjlL/ylL6HK
      Enq9TL5qsLv0gEb4Mj/3+Vs4ts3//ta3+OnP3eTJWh2pscftL/4MzXKe5NioMIDgjKMNcuu9
      CZ4vLXJpOIiDjarIDI2MEg35GQjZLCxn+OBGksX551g4aLExbn9wE4BWJUUmXUYKxhgeDCIF
      IeJzePDwLnMkkMRFsOAsk8/l8PsgW2pQreok4hEkAKNF04aAGgQ5QCIRIZ/eJl02GRkIM5yI
      owDlTBo5FKDRkthZX+dSMoqOn8LuFsPJS29uAOEbwUXgjadA1WoVVRUzKMH55ugj2HGwHAep
      /X9FknAkCUWWURSFYDDYozAFgpPhSAO0ann+13fucm1yiOjAGNXsFi05zE99/FGv4hMITpQj
      b4RpoSGmLycYisTY2d1CC4YIahqNRgPDMHoVo0BwYhw5Aph6DdswCYRjjCYDxHw2phomGAyK
      i2DBheCNV4Hq9TqhUOhdxyMQ9BSRCyToa4QBBH2NMICgrxF3sgTnknQ6TSqV8tpXr16lVqux
      t7fnadeuXSMcDh/5PsIAgnNJq9WiXq97bcuyXtJs237l+4gpkKCvEQYQ9DVHGsCxTR589hjH
      sXk6v8j6yiLLa5u9ik0gOHGONIDRqJIr18nvrrOWLlBtNGmUKliWdaz5lUBw1jnSAJKsUMmn
      yVVbOHoTQ2+g415wiFQIwUXgyFUgLRjlV3/lrwNw48bNrp+ZpnlyUQkEPUJcBAv6GmEAQV8j
      DCDoa4QBBH2NMICgrxEGEPQ1wgCCvuaVZVGauo5PVai3THwy2JJKwK/1KDyB4GQ50gB6Lc83
      /+weP/PRdZ4srZEYDGES4EuiLIrggnCkAXzhISYvjeDzBwmFfKiahuwooiyK4FyztbWFruvA
      McqiqJKMpKhcGp8m5gNTDYmyKIJzTaFQoFarAa/KBQpE+fgLnwcgPnLygQkEvUasAgn6GmEA
      QV8jDCDoa4QBBH2NMICgrxEGEPQ1wgCCvubI+wC2qfPj+3NcGR9mt9gippkYSoj3Zq/0Kj6B
      4EQ5cgQwDZ2WbTOUGMVqVNENE7PepNVqYVlWr2IUCE6Mo8uiIFHJZ3k2/xjTF8a2DEzF3SDv
      xe3pBYLzyCvLovzyV/7aoT+TZXH5IDj/iKNY0NcIAwj6GmEAQV8jDCDoa4QBBH2NMICgrxEG
      EPQ1RxvAcahUKjiOTaVSo14pUq42ehSaQHDyHF0WpZrnj793n5//8AqfrZaJRy0sx8fHXxBl
      UQQXgyNHAF9kiInRIeKXpogEFCRJRpFlURZFcGF4ZVmUoD9AJpcnEg1xORHDUkRZFMH5IZPJ
      kMvlAJAkiZs3u3c6emVZlA/vfADA6OjYCYUoEJwcjUaDYrEIHJ6/JlaBBH2NMICgrxEGEPQ1
      wgCCvkYYQNDXCAMI+hphAEFfc+R9AMto8N0fPuDmdJLNXI2hABhymA/em+1VfALBiXLkCGBb
      Nv6gn1KhScSv0rKBlkGz2RSpEIILwSuyQW0qhTxqUKGqm2g44NPw+/2o6tH76wkE54FXlkX5
      q3/5Fw/9magLJDgJDssxO8ljTZzGBWeKVCrF+vq617558yZDQ0Mn9nliFUjQ1wgDCPoaYQBB
      XyMMIOhrhAEEfY0wgKCvOdYyaH5vm92STkyzMJQQV6cun3RcAsErkHCQutpvQtcI4DgODz/9
      Ho+X1ro67aV3mV96SrlWp1YoYdu2eChecKpUGSDFjPdfi8Abvc8LI4BDq1Glbpe61Gg0RnzY
      ptWoYaoxDMMQWyQJLgQvTYEMx8dAyN+lTczcYGKmu58wgKBXZDIZUqmU156ZmeGwKU+dKFnG
      vbaB75Xv3W0AB/L5NC019sbBCgTvGsMwqNVqXts9+b58+WqjYtA5eTvHuC7oXgWSIOKXKVX1
      N49WIDhHdNmoVq2QnLyBv6GcVjwCQU/pGgE2ns3xgx/do9JsnlY8AkFP6RoBEuPT/EI0iRYI
      nVY8AkFP6TbA2AQJUQJU0Ee8dCPsyeOHzD1dOq14BIKe8tKNMNM0KOS22Y2PcCk5AoBtWbRM
      C1UGR5LRxPPAgndANptlZ2fHa09PT/c8hq4juVwuIUtg2ngHP8Dikwds5Gokoz4MKcSXPxY7
      xAjeHtM0qdfrXvs0bq52GSAWG2AkMUpsKNnVybJsZEVG9QdQbFXsECO4MHQZoFLMc+/+faav
      3e7qNDU9g1aoM+CXMNWw2CFGcGHoMkCrpfP+7Q+wle5coNhwkthwT+MSCHpClwFWnq9QbZoo
      ko/ZmcnTikkg6BldBrhz5yNMFMyWeVrxCAQ9pcsAwXAMx3GQI+JJSUF/0GWAp4/vsZnKcPXa
      LW5cmzmlkASC3tFlgNsffIFQdIXhkfhpxSMQ9JSXngdYW13l/v1HpxSOQNBbukYACYkvfP5j
      HPXNHjDuNyzLYm1tzWtHIhFGR0dPLyDBa9Od1CNJDAyNvNSpkN3l00dLjMdDtOQIX7hzq1fx
      nWls2yaTyXS1hQHOPjoh9hMwum+E6Q02t7eoVZt8+OEdTx8YGiaZGEGWLXw2IhVCcGKYaNSJ
      eG3rBCr4Vxik1P6M7kciK2X29tJMTnfvAdYsF7g8PUt5bwVTDYlUCMGJoROkRMJrm8eo7HAU
      DjJm+zBXDimE2GWAwZEE9tMnXU/gA4SGxggBiYH33yoYgaDXVBkggwbAYU+6v2QJq9Ukky+c
      dFwCwZngBQNIjI1fploUBhD0By9dYfh8ft6/8+FpxCJ4CxqNBtvb2157eHiY4WGRwvsqXnok
      cm1jA5QcU+PJw18hOJOYpkk2m/Xafr+fQCDQ9cjhaZqiVCp1LRmPjZ2N6gtdBtjeWOX2nc+x
      u5M7rXhOFMdxuv4ImqYdewdC27ZfOsBCobNdPsYwjK6YA4HAqRmg2Wx2xXKSOz++Dl0GKBTz
      OKUajebFXeN//vy59+9YLPZaBjj42uHhYa5cufLO4xP0li4DfPDhF7EsC0Xp79KIjuPQPFAd
      T1EUZFmkiF9EunOBJAn1kJIntVKeVLFBVLMxlCCXRy92tqht2zx61EkIHBoa4tq1a6cYkeCk
      ONZ95sWFOQwlSt0PtqVdeAMI+odjGcAfCFGo1NGQsWRF5AL1AYVCoeuaZ3JykmTy4q0MHssA
      t+58jqut/cpwCj5NFblAFxzHcbpOcrZtn2I0J8exDCDLKsHAyZdDzGQyXnUwVVWJx8VUS3Cy
      nKkinxsbG95ZJxgMCgMIAHevrxpRr/0uU6TPlAEEgsPQCVKmczI00YB3cw0qFrcFfY0wgKCv
      OfNToAcPHmCabqW6UCjE+++Lh3IE744zbwDLsryVIbE5t+Bd81YGWFtbQ9fdPYUVRWF2dvYV
      rxAIOuiEyNO5udbCf0Tvd8c35rZY2qsAxzTAo8/uEYwkaBR20OUwX/68WzGiXC57O3wclkMk
      uFg0Gg2KxaLXHhgYeKuUcAsVnbDXtlGAkx/lV3IVnqRKwDENEA2G2N7bYTgaRLZFKsQ+uuXw
      zWcNr/2haXD9+sv9TNMknU577VAoxODgYC9CfKfU63XW19e99pUrV878MxGv4lgGGBiIUTNV
      Ij4bS42IsihtmqbDf3nS2ePqV1Sdrx3SzzRNNjY2vHYikTi2ASzLotHomEzTNPz+l6cKNhKt
      AyVE7LN/eXcmONa3NJK8zMjFy4M6FzSbTebm5rz2pUuXmJiYeMkUNVPlQaFjKt+In8FYT0M9
      l4jTxDmk0Wh0mWJ8fJy0HeH3vzvvab+lXudWUpRpfBWnZoCHDx/SarUA9/najz4SW6/W6/Wu
      A3t0dFTkQ50wp2YA27a9FNvzkGrbNB3+9Q/KXvtnbwT5zfF3/zkHvwtxnXXyiCnQMbEceJTu
      rHyNJ8U+ahcBkQsk6GvECHAIlg3/c7GzvHl7MsRXp04xIMGJ0fcGcByHSqXitVVVBdXHf5vv
      LDP+Ii2++jOnEd3pUWnZLOQ6U77BMZuEdooBnRDHM4Dj8HxtHb/slkWZmbh0wmH1DsdxePr0
      qdceHBxk6qrIaVrImXz9+52L/t8ZavFLN3uTq9NLjnUNUExvMvd8m2KlTDknKkcLLg7HGgGK
      5RpOq0Gj7mCpMZELJDh1vr20y7//4yWv/V8TP82g7/VHqGMZYOb6LaZn3/PakiSJNWrBqeK0
      /3tbjn0RLEnSO/g4geDk+GQjy3/+YSfp8PrkR0ivmOW/1SrQn6w22cm7y4XhgMYXvwipVMqb
      HimKwvj4CdwuFZwKBhoVBg+0z9ZFcb7eYiXbWdFrGhbBVxQ1fisDfHtNZ37XXS4cCpn8DrC3
      t+dlKmqa1ncGsG27a1lV07RTqyxdMxzmMp1rtcCIzcRbvJ+JjyqdcvLGa+zgaKOiEzjQ7k0F
      8lxN51nGXc1SFQnoThDs+/sA7xrTNJmf72RlxuNxJiaOd9jplsPjAwesE7FIJI54wStYL1n8
      iz/vLGX+o7DO5w55YKcXNAmSp7N87prh5HPAfrSe5Q/+fAWAgCbzD7/SvcQtDHCGyNRt/uWB
      A/bvMsyHh+zB4Thg2U5XW/BmCAP0CPPAAWu/5QG7UjT529/Ie+1/8AtD/MX3Ike84mgcx+la
      1ftJCx6O42AezFZ940/8ydgOL3zGybpbGKAHZOo2v37ggP2bXwrze2foZnOxWGRxcdFrT09P
      Ay+b4NFOgX/8jQde+1/96h2ujr7bJKnvP9/jd7/ZmUL+x+EvMhF7c3O/imMZwHFsbNvBPTFI
      YrsgwYXhWAbY3njO0+UtEjEfLTnMT30snt4SvD1r+SrffLLltacv9X5Z9VgGCMeGCAR20YIh
      FFt77VSInZ0dr7yhoihcvnz5zaIVXCi2inX+9FnKa3/tp3t/XBxvgwzbJJ6cYMDnYGnh1y6L
      kk6nvV0XfT6fMMBr0DAcHqRaXtuJWAQHTjGgC8bx6gKNjDIwctKh9IaDB9OEZfLeEX3PAnt1
      i9/7UefG2t/XdL7y4SkGdAx0XfcqBgKEw+Ejep8ufbcKdPBg+rlZP7/UZw+69IJSqdS1wZ5b
      M/ZsVpATyzmCvuZcjgBPnjzxyocEg0FRlVrwxpxLA9Tr9TO7V0BJt/mn3+lUUP4rd8L8+s+e
      YkBnhM92ivy773Rutv3uwPE3Ovl0I8cffGfFa//+6Ltbhj+XBjjLWDaslTrmzNbPplF7Ta1l
      sl3qXBjXjePXVaroRtdrdePdfad9bwDbgT96XPPa708G+I2rpxiQoKe8cwM8zhjky+6uMeEA
      fPyuP+AdYzvwrZWm126oLX7jFOMR9JZjGSCb2mS32CKmmRhKiNmZyZ/Y948+q/EsXQUgGTX4
      za8c3q9uODRa7oWsJYt83l5h23bX9ZOiKJi2WwdoH8NyOCwZ7iJyLAMEY0O0thaoBjTs9qZ1
      b1vQ9p98p8R20X1ybHokxHe/fHi/muHQMtqfpQmjvC3lcpmFhQWvPTU1xUJZ4e/9n065m3/+
      y5eYGAqeRng951gGSD1/Sl0KoepVDFV9JwY4Lr/97SL5mnv39taYybfO+pxKcK44lgGuffBl
      rr2g7Se3CQTnmZ6sAv2bH5bZalePGB0I8D++0ItPFZwWTcJk6CQ8ThAE6j/5BadITwyQqlps
      VdwLL0fp3WYYq6ur3r8DgQBjY2M9++yzynbF4g8fVb32rwUMfIE3r9BQrVbJZDJeOx6P46Bi
      HqgY4ZzhjJsLfR8gnU57advRaFQYAMg1bP5kVffaH79nciNwxAteQaPRYG9vz2uHw2HW8hL/
      /WFnO9XkyNm9sXKhDXCWsSyLQqGz8hIIvMVReMZIV5v8YK0zKnytenaf/zhTBijpDnp7PdqQ
      z/6+YW9Dq9VieXnZa4+OjkJIbIjXa86UAf7ZnxXZa99Fnk0afPsn3BsQnB1aNuQbnZPVxDlL
      fTpTBhCcPz7ZafHb/7czlfu3Uf2I3mePY5ZFcWi1DCTHwpZUAv4LuFdOj8nUbX7rTzoHzq99
      HOWr4iZfzzmWATJbyzx6XiYeMTAJ8qUzWBbl0aNH3t3pcDjMjRs3TjmiozFth71aZ+pQbok0
      j9PgWAaIX5omllpA1SRkRzmTO8Touu4ZQNPECCU4HscyQKVcxOfXSCaGsJXXL4siEJxVjlcW
      ZTjJ54eTJx3LsfnzLR29/UTR2JDGnTuH9/veho7tuKPCZCLA7du9ilBwXjiXq0B/+KhGpeka
      4M5llb/zi4f3+w8Pql5V5p+64udv/UKPAhScG85ukoZA0AOEAQR9zbmcAh3Gb3+7SKNdLeCj
      CYf/9MEpByQ4F1wYA+QaFs32o5Ml/WLnEQneHa81BVpZesrCytoJhSIQ9J7XGAEc9JaBZZ/N
      J3sEgjfhtUYA22xhiu2RBBeI1xgBJD743JcAN5fdMAxGwwqVATftYCCooes6oxGFhu5qI2EV
      XdcZi6iYpquNRlztUlRFclxtbF+LaGiSO38fDSvous54VCWkumv5yXa/yzGNqt+tW5Ns95uI
      +Wia7kVwItTWBjTvPkA8pNBqtZgY6KRJxIMyhtGtjQRljBf6DQdlzBf6DQdkLMPo0oYCEpbZ
      3W/QL2Nb3f0G/BKOZXZrPl7SohrwghbxuRuWdGkaSI7VpYU1B8Xp7hdWQaW7X0hxULG7tKBi
      o73QL6A4+CT7Bc3GL0ldmr/9HMdBzSfZ2LL9khZQnC5NwyL4gqZiE3pBU7AIq92foTgmYa27
      n+xYRLROv4Aqo+s6iZDiaZLzBjkNlmVRr9cJBoMYRgtJVlAVN0doP03CcRxkWX6lBu62nPua
      bdtIkvTG2v4GfvuaZVkoivJOtEDAT6PRJBAIIsvSiXzGSWqO46DrOoFAwNNs26bVar2kGYaB
      3+/Hsiwcx0GSJCzLwufzef1M08RxHDRN87T9HLEXNUmSUNsldRTFPRkpioKiKJ6m6zqapiHL
      sqc1m018Pl+X5v4tAl5MyoFjb//4fJW2fzwqX//617/+ugaQZRlFUVh99oTPHjxgdSvD5NWr
      +FWFWjnPZ4/nqDRNkok4qqJQLeV4/PgJVd3ytEoxy+O5p9R0i0R8BFVRKOZSrG/tUChWSbT7
      FbK7bGztUijVSCbiKIpCPrPDxvYuxXKdZHwERVHIpbfZ2k5RqDQ8Lbu3xfbOHsVKk0R8GEVR
      yKQ22d7do1TVSba19O4mO7t7lGstEvEhFEVhb2eDnVSaSr1FYsTVHt7/MbYjsbS8xsz0JIqi
      sLu1xu5ehlrTJD48iKIo7GyuktrLUNctRtra9sZzUuksjZbNyNCA+wdv1NFbBplshuEhN5Zm
      o07rJa1Gq2WQzWYZGnJjadZrtIxurbGv5Q5qVVqGSS6XY3Bw8CXN61dra/k8Q4ODyJLDD3/w
      /6jW6mztpJicmECRZeq1KoZhkM8X2+93QCsUGXpBKxRKbj8Zni0togUj6I0akUgERYalxUV8
      oSjNRo1IJIoiw+LCAoFIjGa9RjQaRZEdFhYWCEYHaNTd16qyw/z8AuHYAI1a+/0km/n5ecKx
      QZq1OpFIBBmL+flFwrEYzUaTSDhMs1rk+cYuYd9b3AhTVZXRRAI1PMzI8CAB2dVy2TSWZVEr
      5TFsV8tm01i2Sa2Yx+zSLKqFHJbjavm8u5duKX+0lsvnAYliLofNAU1yNecFrZDLejHva/ku
      LXeElvO0ZDzO7s42wUjshfejq18un0d6USu8rM3P3WcrlSHffjZYVVWefnaXnb0shULR0548
      vMtuOkeh2On3+OGnpDJ5CqVOv8/u/5i9bIFisQS4ZQ8f3fsx6VyBYqmEJEkoiszDu/ta2dVk
      iQf3PiGTL1Da76f6mJmeJp5IMDk1jSzLyJLD/bufkM0XKZXLyLKMhM29u5+QKxQolyuu5ljc
      /dTVShVXc8wmNVMivfmM9e20OyIZdeqWQmp9kY2djKu1ajQcjZ3Vp2zuZt0RSa/SxM/W8hzb
      ezl3JGmWackB1pces5MuoKoqZqNESw6xtvCI3WwRVVUx6kVMNcTzpw/Zy5W8Yy82EOGTH/3g
      7e4Eb21vE45FMcoFGu1H4TSfH8sBx4H9Dcd9Pj+WDTYvag4OkleFUpMdcoUy9VbDC0yVbPLF
      ttbuqGJTKJZpGA3vtSoW+WKFRqujKY5FoVShYXSK38q2SbFUQTf0bq1YRrc6Kd6SZVAsFtHt
      zjN+jVqFUqlIpdGpJo2pUyzk6ew8Bo6pU8jnMKTO1+u0dAq5DIbcuexyHKjmdjDk7u2Dytkt
      TLWzObQDlNLrmFr37njF1CqWb7BLK+wuYweGu7T89jJO8MAmb5JEdvsZUrh747f05jOUSKL9
      oRYb68/54fe/Tc3W2vG6U9bdjWf4Y/v93Dqi22vLBAYOaJLE5toyocG2JikU0zukMjkSY+Ou
      JqsU0lukMjmSB7W9LVLZAmOXLrU1jfzuBqlcsUvL7qyzlysxPj7maZmddfYKFS5dGm1/rEZ6
      a41MqcbYqBuLX1NYWVnD8UfebAq0j6bK7O7s4osOMzU+iiSBXq8RvzQJhsFIIoEsQbNeJTk+
      Ba0WI8m2VqsyOjGNrbcYScaRJRgYimM2KgQHhhmNu3/EweE4rXqF8MAIyRFXGxqOo9fLRAbj
      JEeG2v0SNKtFosMJEsOuNjSSpFEpMjCSID7sHijD8SS1coGBRJKRQVcbiSeolgsMJccYHnDP
      7iOJJNVSnuHkOMMDUQBauk69oRNPXiIx0n5tYpRyIUtifIrBqLsZXDyRpFTIkrg8zWDEPbjj
      ySSlXIbRiSsMhN15aSKRJJ/dY2zqGrGQu0duIpkkl0kxNn2dWNDX1kbJZVKMX7lBNOAejMlk
      kuzeLpev3SLiVw9oO0xcu03YryBJkEyOkt7bYfL6bcI+ua0lyeylmL5+m5AmI0kSiUScTDrN
      zPVbBDXXuM1GA9OSGRsbJxYOIMkyifgw6UyWK7M38asykqyQGBkknc1zbfYmPlVCUhTiwwNk
      cgVmZ2+gKRKyohIfipHJl7g+ex1VkZAVjfhglHShzI3r11FlCVnVGBmIkC5UuHl9FkWWkFUf
      IwNh0sUa712/hixJyJqf4ViIdKnOretXkSQJWfUzHA2QrTS5df1q2xMBhiJ+8lWd92avABCJ
      DSEZDeRg5O1GgEKhgCQ52EaT/eLChUKOhz/6Hqs7e5hOR7v/w++yvpvGbPfLF3Lc/cF32Uyl
      sdr95ucesryywu7WLvv1cJ8+7mj7r517/IDl56vsbu16r5377D7Lz9dIbe3QXvjh8aN7LK+6
      2v6l/qOH91hZ2yC1ueP9Ho8e3uP5+ia7G51Nmx89uMvqxja7G5uels1lUQNB9EpnB5iH9++y
      vr3H9tqapz14cJeNnT22DxTmenD/LpupDFurnc3j7t//lK29HFvPO9Uh7t37lO10ga2VZwe0
      T9jNFNl8tuRpd+9+QipXZmNpoVvLV1lfmgfcE/Gnd39MulBlfbGt2TZ3735KplBhrf1axzK5
      e+8e2XyJ1aWldj+TXKFIJBqh2J6G2kaTuw8ekssXWV12fw+7Vefug0fk8wWetzVLr3Lv4WMK
      +Rwry+73YjXL3Hs0RzGfZXllAwCzUeTuZ08p5bMsr7jfs1nPc+/xPOVchmfPt12tluXe3CKV
      XJql5+7fzaimufdkiWouxeLzVFvb4/6TZ1SyKZZW3VpFemmXB0+WKGdSLG+4pVpWFud49myR
      3a3U26VCjE/OMDAyRq2UxbYBBSanZrC1KH7J8tw1OTUD/gF8mN40ZmpqBiU4hGobXr+p6Rm0
      8Aghv4oidTRfNEHIp3ja9PQMwYFRAprivXZ6eobw0CX3rNTWZqZniIyM41c6Pr8yPcNAYgKf
      3Cn/PTM9w2ByEt+BfjPTMwyNTuFTOlXTrs2+h25YFEuFA/2mSYxPo6md5beZqWmS4zNoqq9L
      G7t8BU3zd2mXJq+iaYEu7fKUiqoFu7TJaQ3V161NzfhQ/aED2gyoPhR/uEuTtADqvibJTE9N
      IWtBtEB7miWrTE9OolwL4QtG291Ubt96HxuoVN0pn6QGmLp8Ge3aDQJhdzomaUGmLo/jm71B
      MOKOirIvzOT4GP7Z64Sibc0fZWp8DP/sLJLq/h5KYICpS0kCs9eQNff3UIKDTI4lCM5eQ/G1
      tdAwk6NxQrNXvd9XDcWZTI4Qnr2KFnDfTwsnmBjNErl+BV/Q/U79sSQTY3ki16/iD7vf/cTk
      DC0pRFCx3m4EKGa2ebq0SqmQ987OmZ111je22VxbptGun5veXmN9Y5uNtRXaafyktlZdbX0F
      vT3N3tvZJF8osLTw5IC2QaFQYHHhqTfKpLY3KBTyLC489T53d2udQiHPwsJTbwTY3lynWMgz
      vzDvxby1uUYxn2d+sXPm3NpYo/CCtrmxRrGQZ+HAGXb12RO2UhlKpVJXv0I+z+KBfhttbelZ
      t5YvvKCtu/2eHdDW19fI5/MsLx+mLb6gFVg5oK2tr5I7RMvnc6ys7GsOa+vr3Zpjs76+0daW
      PO3Rw3vki2WqVbeUomMZrG9ukc9nWVle8rSNre225o5ajtliY2unrbmjm200mXu6QCabZXdn
      u601mJtfJJvLdLRWnbn5pS7N0mvMLTwjl8uwu7PT1qrMLSyTy3c0s1nmycIyuWya3d32qNAo
      8WRxhWxmj729NAC5vU3WNjbZWnv2ZvcBjsJxHCzLQpYlJMmdhx6pSRKS7GqW2aJcbeLXJPxB
      d0nMMnTK9RZ+BQLhKLK0rxn4FIdgWzONJtWGiSY7hMJRJAnMVoNq00aVbcKHaKRYr00AAADH
      SURBVJGIe7Yz9Dr1FiiS5WmtZo2mKSNjetph6I0qLUdFsg2vX7NecWtj2q2OVitjygGwdE9r
      VMvYagDH7Gj1agm0ELbR7GiVIvgi2EbD02rlAnIghtWqe1q1VEANxTD1fc1pa4OYes3TKsUC
      vsggRrNb80cGaXnaoX9dSoUCodhgeykz+hO1YiFPZGCIZr3zfpZpIrfvM+zfqzBN07v3cPKa
      g6LI3cfj2xrANAwUTeuT/UTAMIy+eejecRxM00LTLkzS8Ev8fxlCuRC1zG83AAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      /5GRHyIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 15 Commanders (Success across time) Dashboard' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
